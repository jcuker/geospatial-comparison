{"version":3,"sources":["leaflet/shapes.js","leaflet/simple.js","leaflet/popup.js","leaflet/geojson.js","leaflet/index.js","ol/simple.js","ol/shapes.js","ol/popup.js","ol/geojson.js","ol/index.js","landing-page/index.js","App.js","serviceWorker.js","index.js"],"names":["Shapes","console","log","window","L","mymap","map","setView","tileLayer","attribution","addTo","marker","circle","color","fillColor","fillOpacity","radius","polygon","bindPopup","style","height","width","id","React","Component","Simple","Popup","on","e","popup","setLatLng","latlng","setContent","toString","openOn","GeoJson","fetch","json","states","twitter","geoJSON","onEachFeature","feature","layer","properties","popupElementStates","popupElementTwitter","name","text","user","Leaflet","state","collapsed","key","toggleCollapsed","setState","onSelect","item","keyPath","selectedKeys","domEvent","getLeafletMap","props","history","push","position","zIndex","right","type","onClick","this","top","createElement","MenuUnfoldOutlined","MenuFoldOutlined","defaultSelectedKeys","mode","theme","Item","Map","target","layers","TileLayer","source","XYZ","url","view","View","center","zoom","vector","raster","draw","useEffect","OSM","VectorSource","wrapX","VectorLayer","bottom","left","onChange","event","removeInteraction","geometryFunction","value","createRegularPolygon","createBox","coordinates","geometry","last","dx","dy","Math","sqrt","rotation","atan2","newCoordinates","i","angle","PI","fraction","offsetX","cos","offsetY","sin","slice","setCoordinates","Polygon","Draw","addInteraction","container","document","getElementById","content","closer","overlay","Overlay","element","autoPan","autoPanAnimation","duration","onclick","setPosition","undefined","blur","overlays","evt","coordinate","hdms","toStringHDMS","olProj","innerHTML","className","href","styleFunctionTwitter","olStyle","image","olCircle","fill","olFill","stroke","olStroke","Infinity","styleFunctionStates","getProperties","selected","olText","layer1","olVectorLayer","olVectorSource","format","GeoJSON","layer2","features","forEachFeatureAtPixel","pixel","length","popupString","s","OpenLayers","getOlMap","LandingPage","mouseEnter","nativeEvent","mouseLeave","display","flexDirection","alignItems","to","onMouseEnter","onMouseLeave","src","margin","padding","App","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.65b4ab62.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class Shapes extends React.Component {\n  componentDidMount() {\n    console.log(window.L);\n    const L = window.L;\n\n    const mymap = L.map(\"map\").setView([51.505, -0.09], 13);\n\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution:\n        '& <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(mymap);\n    const marker = L.marker([51.5, -0.09]).addTo(mymap);\n    const circle = L.circle([51.508, -0.11], {\n      color: \"red\",\n      fillColor: \"#f03\",\n      fillOpacity: 0.5,\n      radius: 500,\n    }).addTo(mymap);\n    const polygon = L.polygon([\n      [51.509, -0.08],\n      [51.503, -0.06],\n      [51.51, -0.047],\n    ]).addTo(mymap);\n    marker.bindPopup(\"I am a marker.\");\n    circle.bindPopup(\"I am a circle.\");\n    polygon.bindPopup(\"I am a polygon.\");\n  }\n\n  render() {\n    return (\n      <div style={{ height: \"100%\", width: \"100%\" }}>\n        <div id=\"map\" style={{ height: \"100%\", width: \"100%\" }} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class Simple extends React.Component {\n  componentDidMount() {\n    console.log(window.L);\n    const L = window.L;\n\n    const mymap = L.map(\"map\").setView([51.505, -0.09], 13);\n\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution:\n        '& <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(mymap);\n  }\n\n  render() {\n    return (\n      <div style={{ height: \"100%\", width: \"100%\" }}>\n        <div id=\"map\" style={{ height: \"100%\", width: \"100%\" }} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class Popup extends React.Component {\n  componentDidMount() {\n    const L = window.L;\n\n    const mymap = L.map(\"map\").setView([51.505, -0.09], 13);\n\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution:\n        '& <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(mymap);\n\n    mymap.on(\"click\", (e) => {\n      L.popup()\n        .setLatLng(e.latlng)\n        .setContent(\"You clicked the map at \" + e.latlng.toString())\n        .openOn(mymap);\n    });\n  }\n\n  render() {\n    return (\n      <div style={{ height: \"100%\", width: \"100%\" }}>\n        <div id=\"map\" style={{ height: \"100%\", width: \"100%\" }} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class GeoJson extends React.Component {\n  async componentDidMount() {\n    const L = window.L;\n\n    const mymap = L.map(\"map\").setView([37.71859, -92.007813], 4);\n\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution:\n        '& <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(mymap);\n\n    const states = await (await fetch(\"states-geojson.json\")).json();\n    const twitter = await (await fetch(\"twitter.json\")).json();\n\n    L.geoJSON(states, {\n      onEachFeature: (feature, layer) => {\n        // does this feature have a property named popupContent?\n        if (feature.properties) {\n          const properties = feature.properties;\n          this.popupElementStates(layer, properties);\n        }\n      },\n    }).addTo(mymap);\n\n    L.geoJSON(twitter, {\n      onEachFeature: (feature, layer) => {\n        // does this feature have a property named popupContent?\n        if (feature.properties) {\n          const properties = feature.properties;\n          this.popupElementTwitter(layer, properties);\n        }\n      },\n    }).addTo(mymap);\n  }\n\n  popupElementStates(layer, properties) {\n    layer.bindPopup(`Name: ${properties.name} id: ${properties.id}`);\n  }\n\n  popupElementTwitter(layer, properties) {\n    layer.bindPopup(`Text: ${properties.text} user: ${properties.user}`);\n  }\n\n  render() {\n    return (\n      <div style={{ height: \"100%\", width: \"100%\" }}>\n        <div id=\"map\" style={{ height: \"100%\", width: \"100%\" }} />\n      </div>\n    );\n  }\n}\n","import { MenuFoldOutlined, MenuUnfoldOutlined } from \"@ant-design/icons\";\nimport { Button, Menu } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport React from \"react\";\nimport Shapes from \"./shapes\";\nimport Simple from \"./simple\";\nimport Popup from \"./popup\";\nimport GeoJSON from \"./geojson\";\n\nexport default class Leaflet extends React.Component {\n  state = {\n    collapsed: false,\n    key: \"1\",\n  };\n\n  toggleCollapsed = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  onSelect = ({ item, key, keyPath, selectedKeys, domEvent }) => {\n    this.setState({ key });\n  };\n\n  getLeafletMap = () => {\n    switch (this.state.key) {\n      case \"1\":\n        return <Simple />;\n      case \"2\":\n        return <Shapes />;\n      case \"3\":\n        return <Popup />;\n      case \"4\":\n        return <GeoJSON />;\n      case \"999\":\n        this.props.history.push(\"/ol\");\n        return;\n      default:\n        return <Simple />;\n    }\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          height: \"100vh\",\n          width: \"100vw\",\n        }}\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            zIndex: 999999,\n            right: 0,\n          }}\n        >\n          <Button\n            type=\"primary\"\n            onClick={this.toggleCollapsed}\n            style={{\n              position: \"absolute\",\n              top: 7.5,\n              right: this.state.collapsed ? 5 : \"12.25rem\",\n            }}\n          >\n            {React.createElement(\n              this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined\n            )}\n          </Button>\n          <Menu\n            defaultSelectedKeys={[\"1\"]}\n            mode=\"inline\"\n            theme=\"dark\"\n            style={{\n              height: \"100vh\",\n              width: this.state.collapsed ? \"0rem\" : \"12rem\",\n            }}\n            onSelect={this.onSelect}\n          >\n            <Menu.Item key=\"1\">Just a Map</Menu.Item>\n            <Menu.Item key=\"2\">Drawing Shapes</Menu.Item>\n            <Menu.Item key=\"3\">Popup at Click</Menu.Item>\n            <Menu.Item key=\"4\">GeoJSON</Menu.Item>\n            <Menu.Item key=\"999\">Goto OpenLayers</Menu.Item>\n          </Menu>\n        </div>\n        {this.getLeafletMap()}\n      </div>\n    );\n  }\n}\n\n/**\n * import { MenuFoldOutlined, MenuUnfoldOutlined } from \"@ant-design/icons\";\nimport { Button, Menu } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport React from \"react\";\nimport Drawing from \"./drawing\";\nimport Simple from \"./simple\";\nimport Popup from \"./popup\";\nimport GeoJSON from \"./geojson\";\n\nexport default class Leaflet extends React.Component {\n  state = {\n    collapsed: false,\n    key: \"1\",\n  };\n\n  toggleCollapsed = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  onSelect = ({ item, key, keyPath, selectedKeys, domEvent }) => {\n    this.setState({ key });\n  };\n\n  getLeafletMap = () => {\n    switch (this.state.key) {\n      case \"1\":\n        return <Simple />;\n      case \"2\":\n        return <Drawing />;\n      case \"3\":\n        return <Popup />;\n      case \"4\":\n        return <GeoJSON />;\n      default:\n        return <Simple />;\n    }\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          height: \"100vh\",\n          width: \"100vw\",\n        }}\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            zIndex: 999999,\n          }}\n        >\n          <Button\n            type=\"primary\"\n            onClick={this.toggleCollapsed}\n            style={{\n              position: \"absolute\",\n              top: 10,\n              left: this.state.collapsed ? \"2.5rem\" : \"12.25rem\",\n              display: \"flex\",\n              height: \"1.5rem\",\n              width: \"1rem\",\n              justifyContent: \"center\",\n            }}\n          >\n            {React.createElement(\n              this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined\n            )}\n          </Button>\n          <Menu\n            defaultSelectedKeys={[\"1\"]}\n            mode=\"inline\"\n            theme=\"dark\"\n            style={{\n              height: \"100vh\",\n              width: this.state.collapsed ? \"0rem\" : \"12rem\",\n              display: this.state.collapsed ? \"none\" : \"block\",\n            }}\n            onSelect={this.onSelect}\n          >\n            <Menu.Item key=\"1\">Basic Example</Menu.Item>\n            <Menu.Item key=\"2\">Drawing Shapes</Menu.Item>\n            <Menu.Item key=\"3\">Popup at Click</Menu.Item>\n            <Menu.Item key=\"4\">GeoJSON</Menu.Item>\n          </Menu>\n        </div>\n        {this.getLeafletMap()}\n      </div>\n    );\n  }\n}\n\n */\n","import \"ol/ol.css\";\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport XYZ from \"ol/source/XYZ\";\nimport React from \"react\";\n\nexport default class Simple extends React.Component {\n  componentDidMount() {\n    new Map({\n      target: \"map\",\n      layers: [\n        new TileLayer({\n          source: new XYZ({\n            url: \"https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          }),\n        }),\n      ],\n      view: new View({\n        center: [0, 0],\n        zoom: 2,\n      }),\n    });\n  }\n\n  render() {\n    return (\n      <div\n        id=\"map\"\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      ></div>\n    );\n  }\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport \"ol/ol.css\";\nimport Map from \"ol/Map\";\nimport View from \"ol/View\";\nimport Polygon from \"ol/geom/Polygon\";\nimport Draw, { createRegularPolygon, createBox } from \"ol/interaction/Draw\";\nimport { Tile as TileLayer, Vector as VectorLayer } from \"ol/layer\";\nimport { OSM, Vector as VectorSource } from \"ol/source\";\nimport React, { useEffect } from \"react\";\n\nexport default function Shapes() {\n  let map, source, vector, raster;\n\n  useEffect(() => {\n    raster = new TileLayer({\n      source: new OSM(),\n    });\n\n    source = new VectorSource({ wrapX: false });\n\n    vector = new VectorLayer({\n      source: source,\n    });\n\n    map = new Map({\n      layers: [raster, vector],\n      target: \"map\",\n      view: new View({\n        center: [-11000000, 4600000],\n        zoom: 4,\n      }),\n    });\n  });\n\n  var draw; // global so we can remove it later\n  function addInteraction(event) {\n    var value = event.target.value;\n    if (value !== \"None\") {\n      var geometryFunction;\n      if (value === \"Square\") {\n        value = \"Circle\";\n        geometryFunction = createRegularPolygon(4);\n      } else if (value === \"Box\") {\n        value = \"Circle\";\n        geometryFunction = createBox();\n      } else if (value === \"Star\") {\n        value = \"Circle\";\n        geometryFunction = function (coordinates, geometry) {\n          var center = coordinates[0];\n          var last = coordinates[1];\n          var dx = center[0] - last[0];\n          var dy = center[1] - last[1];\n          var radius = Math.sqrt(dx * dx + dy * dy);\n          var rotation = Math.atan2(dy, dx);\n          var newCoordinates = [];\n          var numPoints = 12;\n          for (var i = 0; i < numPoints; ++i) {\n            var angle = rotation + (i * 2 * Math.PI) / numPoints;\n            var fraction = i % 2 === 0 ? 1 : 0.5;\n            var offsetX = radius * fraction * Math.cos(angle);\n            var offsetY = radius * fraction * Math.sin(angle);\n            newCoordinates.push([center[0] + offsetX, center[1] + offsetY]);\n          }\n          newCoordinates.push(newCoordinates[0].slice());\n          if (!geometry) {\n            geometry = new Polygon([newCoordinates]);\n          } else {\n            geometry.setCoordinates([newCoordinates]);\n          }\n          return geometry;\n        };\n      }\n      draw = new Draw({\n        source: source,\n        type: value,\n        geometryFunction: geometryFunction,\n      });\n      map.addInteraction(draw);\n    }\n  }\n\n  return (\n    <div\n      style={{\n        height: \"100%\",\n        width: \"100%\",\n      }}\n    >\n      <div\n        id=\"map\"\n        style={{\n          height: \"100%\",\n          width: \"100%\",\n        }}\n      ></div>\n      <form style={{ position: \"absolute\", bottom: 0, left: 5 }}>\n        <label>Shape type &nbsp;</label>\n        <select\n          id=\"type\"\n          onChange={(event) => {\n            map.removeInteraction(draw);\n            addInteraction(event);\n          }}\n        >\n          <option value=\"None\">None</option>\n          <option value=\"Circle\">Circle</option>\n          <option value=\"Square\">Square</option>\n          <option value=\"Box\">Box</option>\n          <option value=\"Star\">Star</option>\n        </select>\n      </form>\n    </div>\n  );\n}\n","import \"ol/ol.css\";\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport XYZ from \"ol/source/XYZ\";\nimport React from \"react\";\nimport * as olProj from \"ol/proj\";\nimport \"./popup.css\";\nimport Overlay from \"ol/Overlay\";\nimport { toStringHDMS } from \"ol/coordinate\";\n\nexport default class Popup extends React.Component {\n  componentDidMount() {\n    var container = document.getElementById(\"popup\");\n    var content = document.getElementById(\"popup-content\");\n    var closer = document.getElementById(\"popup-closer\");\n    /**\n     * Create an overlay to anchor the popup to the map.\n     */\n    var overlay = new Overlay({\n      element: container,\n      autoPan: true,\n      autoPanAnimation: {\n        duration: 250,\n      },\n    });\n\n    /**\n     * Add a click handler to hide the popup.\n     * @return {boolean} Don't follow the href.\n     */\n    closer.onclick = function () {\n      overlay.setPosition(undefined);\n      closer.blur();\n      return false;\n    };\n    const map = new Map({\n      target: \"map\",\n      layers: [\n        new TileLayer({\n          source: new XYZ({\n            url: \"https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          }),\n        }),\n      ],\n      overlays: [overlay],\n      view: new View({\n        center: [0, 0],\n        zoom: 2,\n      }),\n    });\n    /**\n     * Add a click handler to the map to render the popup.\n     */\n    map.on(\"singleclick\", function (evt) {\n      var coordinate = evt.coordinate;\n      var hdms = toStringHDMS(olProj.toLonLat(coordinate));\n\n      content.innerHTML = \"<p>You clicked here:</p><code>\" + hdms + \"</code>\";\n      overlay.setPosition(coordinate);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"map\" className=\"map\"></div>\n        <div id=\"popup\" className=\"ol-popup\">\n          <a href=\"#\" id=\"popup-closer\" className=\"ol-popup-closer\"></a>\n          <div id=\"popup-content\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n","import GeoJSON from \"ol/format/GeoJSON\";\nimport { Tile as TileLayer } from \"ol/layer\";\nimport olVectorLayer from \"ol/layer/Vector\";\nimport Map from \"ol/Map\";\nimport \"ol/ol.css\";\nimport Overlay from \"ol/Overlay\";\nimport { OSM } from \"ol/source\";\nimport olVectorSource from \"ol/source/Vector\";\nimport olCircle from \"ol/style/Circle\";\nimport olFill from \"ol/style/Fill\";\nimport olStroke from \"ol/style/Stroke\";\nimport olStyle from \"ol/style/Style\";\nimport olText from \"ol/style/Text\";\nimport View from \"ol/View\";\nimport React from \"react\";\nimport \"./popup.css\";\n\nexport default class GeoJson extends React.Component {\n  async componentDidMount() {\n    var container = document.getElementById(\"popup\");\n    var content = document.getElementById(\"popup-content\");\n    var closer = document.getElementById(\"popup-closer\");\n    /**\n     * Create an overlay to anchor the popup to the map.\n     */\n    var overlay = new Overlay({\n      element: container,\n      autoPan: true,\n      autoPanAnimation: {\n        duration: 250,\n      },\n    });\n\n    /**\n     * Add a click handler to hide the popup.\n     * @return {boolean} Don't follow the href.\n     */\n    closer.onclick = function () {\n      overlay.setPosition(undefined);\n      closer.blur();\n      return false;\n    };\n    try {\n      const layer1 = new olVectorLayer({\n        source: new olVectorSource({\n          format: new GeoJSON(),\n          url: \"twitter.json\",\n        }),\n        style: this.styleFunctionTwitter,\n      });\n\n      const layer2 = new olVectorLayer({\n        source: new olVectorSource({\n          format: new GeoJSON(),\n          url: \"states-geojson.json\",\n        }),\n        style: this.styleFunctionStates,\n      });\n\n      const map = new Map({\n        layers: [\n          new TileLayer({\n            source: new OSM(),\n          }),\n          layer1,\n          layer2,\n        ],\n        target: \"map\",\n        overlays: [overlay],\n        view: new View({\n          center: [0, 0],\n          zoom: 2,\n        }),\n      });\n\n      map.on(\"singleclick\", function (event) {\n        const features = [];\n        map.forEachFeatureAtPixel(event.pixel, function (feature, layer) {\n          features.push(feature);\n        });\n        if (features.length > 0) {\n          var coordinate = event.coordinate;\n          let popupString = \"\";\n          for (let i = 0; i < features.length; i++) {\n            const properties = features[i].getProperties();\n            let s;\n            if (properties.name) {\n              s = properties.name;\n            } else {\n              s = properties.text;\n            }\n            popupString += `Feature ${i}: ${s}<br/>`;\n          }\n\n          content.innerHTML = popupString;\n          overlay.setPosition(coordinate);\n        }\n      });\n    } catch (er) {\n      console.log(er);\n      return null;\n    }\n  }\n\n  styleFunctionTwitter = () => {\n    const white = [255, 255, 255, 1];\n    const blue = [0, 153, 255, 1];\n    const width = 3;\n\n    return [\n      new olStyle({\n        image: new olCircle({\n          radius: width * 2,\n          fill: new olFill({\n            color: blue,\n          }),\n          stroke: new olStroke({\n            color: white,\n            width: width / 2,\n          }),\n        }),\n        zIndex: Infinity,\n      }),\n    ];\n  };\n\n  styleFunctionStates = (feature) => {\n    const color = feature.getProperties().selected ? \"#FF6347\" : \"#7FDBFF33\";\n    const name = feature.getProperties().name;\n    return [\n      new olStyle({\n        fill: new olFill({ color: color }),\n        stroke: new olStroke({\n          color: \"#0074D9\",\n          width: 2,\n        }),\n        text: new olText({ text: name }),\n      }),\n    ];\n  };\n\n  render() {\n    return (\n      <div>\n        <div id=\"map\" style={{ height: \"100vh\", width: \"100vw\" }}></div>;\n        <div id=\"popup\" className=\"ol-popup\">\n          <a href=\"#\" id=\"popup-closer\" className=\"ol-popup-closer\"></a>\n          <div id=\"popup-content\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { MenuFoldOutlined, MenuUnfoldOutlined } from \"@ant-design/icons\";\nimport { Button, Menu } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport React from \"react\";\nimport Simple from \"./simple\";\nimport Shapes from \"./shapes\";\nimport Popup from \"./popup\";\nimport GeoJson from \"./geojson\";\n\nexport default class OpenLayers extends React.Component {\n  state = {\n    collapsed: false,\n    key: \"1\",\n  };\n\n  toggleCollapsed = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  onSelect = ({ item, key, keyPath, selectedKeys, domEvent }) => {\n    this.setState({ key });\n  };\n\n  getOlMap = () => {\n    switch (this.state.key) {\n      case \"1\":\n        return <Simple />;\n      case \"2\":\n        return <Shapes />;\n      case \"3\":\n        return <Popup />;\n      case \"4\":\n        return <GeoJson />;\n      case \"999\":\n        this.props.history.push(\"/leaflet\");\n        return;\n      default:\n        return <Simple />;\n    }\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          height: \"100vh\",\n          width: \"100vw\",\n        }}\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            zIndex: 999999,\n            right: 0,\n          }}\n        >\n          <Button\n            type=\"primary\"\n            onClick={this.toggleCollapsed}\n            style={{\n              position: \"absolute\",\n              top: 7.5,\n              right: this.state.collapsed ? 5 : \"12.25rem\",\n            }}\n          >\n            {React.createElement(\n              this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined\n            )}\n          </Button>\n          <Menu\n            defaultSelectedKeys={[\"1\"]}\n            mode=\"inline\"\n            theme=\"dark\"\n            style={{\n              height: \"100vh\",\n              width: this.state.collapsed ? \"0rem\" : \"12rem\",\n            }}\n            onSelect={this.onSelect}\n          >\n            <Menu.Item key=\"1\">Just a Map</Menu.Item>\n            <Menu.Item key=\"2\">Drawing Shapes</Menu.Item>\n            <Menu.Item key=\"3\">Popup at Click</Menu.Item>\n            <Menu.Item key=\"4\">GeoJSON</Menu.Item>\n            <Menu.Item key=\"999\">Goto Leaflet</Menu.Item>\n          </Menu>\n        </div>\n        {this.getOlMap()}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Divider } from \"antd\";\nimport \"./landing-page.css\";\n\nexport default function LandingPage() {\n  function mouseEnter(e, color) {\n    const div = e.nativeEvent.target;\n    div.style.color = \"green\";\n  }\n\n  function mouseLeave() {}\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100vh\",\n        width: \"100vw\",\n        alignItems: \"center\",\n      }}\n    >\n      <Link\n        to=\"/leaflet\"\n        onMouseEnter={(e) => mouseEnter(e, \"\")}\n        onMouseLeave={mouseLeave}\n        className=\"leaflet\"\n      >\n        <img src=\"https://leafletjs.com/docs/images/logo.png\" />\n      </Link>\n      <Divider\n        style={{\n          margin: 0,\n          padding: 0,\n        }}\n      />\n      <Link\n        to=\"/ol\"\n        onMouseEnter={mouseEnter}\n        onMouseLeave={mouseLeave}\n        className=\"ol\"\n      >\n        <img src=\"https://financesonline.com/uploads/2019/09/OpenLayers-logo1.png\" />\n      </Link>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Leaflet from \"./leaflet\";\nimport OpenLayers from \"./ol\";\nimport LandingPage from \"./landing-page\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/leaflet\" component={Leaflet}></Route>\n          <Route path=\"/ol\" component={OpenLayers}></Route>\n          <Route path=\"/\" component={LandingPage}></Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}