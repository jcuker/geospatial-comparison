{"version":3,"sources":["ComponentWrapper.js","leaflet/drawing.js","leaflet/geojson.js","leaflet/popup.js","leaflet/radar.js","leaflet/simple.js","leaflet/turf/center.js","leaflet/turf/connect.js","leaflet/index.js","ol/drawing.js","ol/util.js","ol/geojson.js","ol/popup.js","ol/radar.js","ol/simple.js","ol/turf/center.js","ol/turf/connect.js","ol/index.js","landing-page/index.js","mapbox/drawing.js","mapbox/geojson.js","mapbox/popup.js","mapbox/radar.js","mapbox/simple.js","mapbox/turf/center.js","mapbox/turf/connect.js","mapbox/index.js","App.js","index.js"],"names":["ComponentWrapper","props","toggleCollapsed","setState","collapsed","state","onSelect","item","key","keyPath","selectedKeys","domEvent","history","replace","pathname","framework","getNavItems","ol","Item","onClick","push","leaflet","mapbox","turf","splitPathname","window","location","split","length","this","menuNavItems","map","mapResolver","style","height","width","position","zIndex","right","type","top","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","openKeys","mode","theme","title","onTitleClick","Component","withRouter","Drawing","undefined","rects","openInfo","notification","destroy","modalOpen","closeModal","e","gesture","finishedRect","document","info","message","description","placement","duration","L","setView","tileLayer","attribution","addTo","marker","circle","color","fillColor","fillOpacity","radius","polygon","bindPopup","on","startingLatLng","inProgressRect","endingLatLng","latlng","lat","lng","initial","prevProps","prevState","temporary","rectToRemove","pop","removeLayer","drawn","rectangle","weight","id","bottom","left","InfoCircleOutlined","visible","footer","GeoJson","a","mymap","fetch","origin","json","states","twitter","geoJSON","onEachFeature","feature","layer","properties","popupElementStates","popupElementTwitter","name","text","user","Popup","popup","setLatLng","setContent","toString","openOn","Radar","radarLayers","timestamps","animationTimer","animationPosition","addLayer","ts","TileLayer","tileSize","opacity","hasLayer","changeRadarPosition","preloadOnly","currentTimestamp","nextTimestamp","setOpacity","stop","clearTimeout","playing","play","showFrame","setTimeout","nextPosition","preloadingDirection","PauseOutlined","CaretRightOutlined","Simple","Center","turfFeatureCollection","turfHelpers","features","allCenters","forEach","center","turfCenter","centerFeatureCollection","popupElementCenter","Connect","flatCoords","geometry","coordinates","lineString","Leaflet","draw","source","vector","raster","OSM","VectorSource","wrapX","VectorLayer","Map","layers","target","view","View","zoom","event","geometryFunction","value","createRegularPolygon","createBox","last","dx","dy","Math","sqrt","rotation","atan2","newCoordinates","i","angle","PI","fraction","offsetX","cos","offsetY","sin","slice","setCoordinates","Polygon","Draw","addInteraction","onChange","removeInteraction","blue","green","red","black","white","styleFunctionTwitter","olStyle","image","olCircle","fill","olFill","stroke","olStroke","Number","MAX_SAFE_INTEGER","styleFunctionEnrichedTwitter","sentiment","toLowerCase","includes","getColorFromSentiment","getProperties","styleFunctionStates","selected","olText","styleFunctionTwitterCluster","get","size","getRandomInt","min","max","ceil","floor","random","isCluster","container","getElementById","content","closer","overlay","Overlay","element","autoPan","autoPanAnimation","onclick","setPosition","blur","layer1","olVectorLayer","olVectorSource","format","GeoJSON","url","layer2","overlays","forEachFeatureAtPixel","pixel","coordinate","popupString","s","innerHTML","console","log","className","XYZ","evt","hdms","toStringHDMS","olProj","jsDates","tweetsByTime","tweetClusterLayer","twitterLayer","setProperties","targetProperties","allLayers","getLayers","result","currLayer","currLayerProperties","mapHasLayer","tweetsInTimeBucket","getSource","addFeatures","clear","showRadar","stepPosition","direction","loaded","newPosition","forceUpdate","onSliderChange","val","inputValue","setDistance","showTwitter","createOverlay","loadData","clusterFeatures","currFeature","str","place","Date","baseUrl","remote","error","unixTimestampOfTweet","getTime","findMatchingTimestamp","dateIdx","readFeatures","dtg","getGeometry","transform","olClusterSource","distance","success","snapshot","setVisible","getVisible","toLocaleString","timeString","fontSize","textAlign","alignSelf","justifySelf","margin","leftIdx","rightIdx","timeDisplay","getTimeDisplay","display","flexDirection","alignItems","justifyContent","paddingLeft","alignContent","background","borderRadius","step","flex","marginLeft","marginRight","LeftOutlined","RightOutlined","statesResponse","geoJson","lineStringFeature","readFeature","addFeature","getFeatures","vectorLayer","rasterLayer","statesLayer","fromLonLat","twitterResponse","flatGeometry","flatCoordinates","OpenLayers","toggleRemote","componentKey","String","dataLocationButton","CloudServerOutlined","HddOutlined","remoteUrl","jsonConfig","geoserverUrl","LandingPage","to","src","alt","process","addControl","MapboxDraw","statesJson","twitterJson","addSource","data","paint","layout","queryRenderedFeatures","point","descStr","unknownString","Object","keys","JSON","stringify","lngLat","setLngLat","setHTML","getCanvas","cursor","htmlStr","radarObjects","obj","getLayer","setLayoutProperty","sourceId","find","tiles","sources","minzoom","maxzoom","visibility","Mapbox","App","basename","path","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.c9ced68f.chunk.js","sourcesContent":["import { MenuFoldOutlined, MenuUnfoldOutlined } from \"@ant-design/icons\";\nimport { Button, Menu } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport SubMenu from \"antd/lib/menu/SubMenu\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\n/**\n * Expects props to be like such:\n * {\n *  framework: 'leaflet' | 'ol' | 'mapbox,\n *  mapResolver: (key: number) => JSX.Element;\n * }\n */\nclass ComponentWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: false,\n      key: \"1\",\n      turf: false,\n    };\n  }\n\n  componentDidMount() {\n    const splitPathname = window.location.pathname.split(\"/\");\n    const key = splitPathname[splitPathname.length - 1];\n    this.setState({ key });\n    if (key >= 5 && key < 7) {\n      this.setState({ turf: true });\n    }\n  }\n\n  toggleCollapsed = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  onSelect = ({ item, key, keyPath, selectedKeys, domEvent }) => {\n    this.setState({ key });\n    if (key < 1000)\n      this.props.history.replace({\n        pathname: `/${this.props.framework}/${key}`,\n      });\n  };\n\n  getNavItems = () => {\n    const ol = (\n      <Menu.Item\n        key=\"1000\"\n        onClick={() => {\n          this.props.history.push(`/ol/${this.state.key}`);\n        }}\n      >\n        Goto OpenLayers\n      </Menu.Item>\n    );\n\n    const leaflet = (\n      <Menu.Item\n        key=\"1001\"\n        onClick={() => {\n          this.props.history.push(`/leaflet/${this.state.key}`);\n        }}\n      >\n        Goto Leaflet\n      </Menu.Item>\n    );\n\n    const mapbox = (\n      <Menu.Item\n        key=\"1002\"\n        onClick={() => {\n          this.props.history.push(`/mapbox/${this.state.key}`);\n        }}\n      >\n        Goto Mapbox\n      </Menu.Item>\n    );\n\n    switch (this.props.framework) {\n      case \"leaflet\":\n        return [ol, mapbox];\n      case \"ol\":\n        return [leaflet, mapbox];\n      case \"mapbox\":\n        return [leaflet, ol];\n      default:\n        return [leaflet, ol, mapbox];\n    }\n  };\n\n  render() {\n    const menuNavItems = this.getNavItems();\n    const map = this.props.mapResolver(this.state.key);\n\n    return (\n      <div\n        style={{\n          height: \"100vh\",\n          width: \"100vw\",\n        }}\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            zIndex: 999999,\n            right: 0,\n          }}\n        >\n          <Button\n            type=\"primary\"\n            onClick={this.toggleCollapsed}\n            style={{\n              position: \"absolute\",\n              top: 7.5,\n              right: this.state.collapsed ? 5 : \"12.25rem\",\n            }}\n          >\n            {React.createElement(\n              this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined\n            )}\n          </Button>\n          <Menu\n            selectedKeys={[this.state.key]}\n            openKeys={[this.state.turf ? \"turf\" : \"\"]}\n            mode=\"inline\"\n            theme=\"dark\"\n            style={{\n              height: \"100vh\",\n              width: this.state.collapsed ? \"0rem\" : \"12rem\",\n            }}\n            onSelect={this.onSelect}\n          >\n            <Menu.Item key=\"1\">Just a Map</Menu.Item>\n            <Menu.Item key=\"2\">Drawing Shapes</Menu.Item>\n            <Menu.Item key=\"3\">Popup at Click</Menu.Item>\n            <Menu.Item key=\"4\">GeoJSON</Menu.Item>\n            <SubMenu\n              key=\"turf\"\n              title=\"Turf\"\n              onTitleClick={() => this.setState({ turf: !this.state.turf })}\n            >\n              <Menu.Item key=\"5\">Connect the Dots</Menu.Item>\n              <Menu.Item key=\"6\">Center of States</Menu.Item>\n            </SubMenu>\n            <Menu.Item key=\"7\">Radar</Menu.Item>\n            {[...menuNavItems]}\n          </Menu>\n        </div>\n        {map}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ComponentWrapper);\n","/**\n *\n * There exists a plugin for drawing here: https://github.com/Leaflet/Leaflet.draw\n * This demo is restricted to vanilla features though. If you NEED drawing consider the above library.\n */\n\nimport React from \"react\";\nimport { InfoCircleOutlined } from \"@ant-design/icons\";\nimport { Modal, Button, notification } from \"antd\";\n\nexport default class Drawing extends React.Component {\n  map = undefined;\n  rects = [];\n\n  constructor() {\n    super();\n    this.state = {\n      gesture: undefined,\n      finishedRect: undefined,\n      modalOpen: false,\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"Leaflet | Drawing Example\";\n\n    notification.destroy();\n    notification.info({\n      message: \"Drawing\",\n      description:\n        \"Clicking on the map will begin to draw a rectangle. Click the button in the bottom right for more information.\",\n      placement: \"topLeft\",\n      duration: 5,\n    });\n\n    const L = window.L;\n\n    const map = L.map(\"map\").setView([51.505, -0.09], 13);\n\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution:\n        '& <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(map);\n\n    const marker = L.marker([51.5, -0.09]).addTo(map);\n\n    const circle = L.circle([51.508, -0.11], {\n      color: \"red\",\n      fillColor: \"#f03\",\n      fillOpacity: 0.5,\n      radius: 500,\n    }).addTo(map);\n\n    const polygon = L.polygon([\n      [51.509, -0.08],\n      [51.503, -0.06],\n      [51.51, -0.047],\n    ]).addTo(map);\n\n    marker.bindPopup(\"I am a marker.\");\n    circle.bindPopup(\"I am a circle.\");\n    polygon.bindPopup(\"I am a polygon.\");\n\n    this.map = map;\n\n    map.on(\"click\", (e) => {\n      if (this.state.gesture) {\n        const startingLatLng = this.state.gesture.inProgressRect.startingLatLng;\n        const endingLatLng = e.latlng;\n\n        this.setState({\n          gesture: undefined,\n          finishedRect: {\n            startingLatLng: [...startingLatLng],\n            endingLatLng: [endingLatLng.lat, endingLatLng.lng],\n          },\n        });\n      } else {\n        this.setState({\n          gesture: {\n            initial: e,\n            inProgressRect: {\n              startingLatLng: [e.latlng.lat, e.latlng.lng],\n            },\n          },\n        });\n      }\n    });\n\n    map.on(\"mousemove\", (e) => {\n      if (\n        this.state.gesture &&\n        this.state.gesture.inProgressRect &&\n        this.state.gesture.inProgressRect.startingLatLng\n      ) {\n        const endingLatLng = e.latlng;\n\n        this.setState({\n          gesture: {\n            inProgressRect: {\n              startingLatLng: [\n                ...this.state.gesture.inProgressRect.startingLatLng,\n              ],\n              endingLatLng: [endingLatLng.lat, endingLatLng.lng],\n            },\n          },\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    notification.destroy();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const L = window.L;\n\n    if (this.rects.length > 0 && this.rects[this.rects.length - 1].temporary) {\n      const rectToRemove = this.rects.pop();\n      this.map.removeLayer(rectToRemove);\n    }\n\n    if (this.state.finishedRect) {\n      const drawn = L.rectangle(\n        [\n          [...this.state.finishedRect.startingLatLng],\n          [...this.state.finishedRect.endingLatLng],\n        ],\n        {\n          color: \"#ff7800\",\n          weight: 5,\n        }\n      ).addTo(this.map);\n\n      drawn.bindPopup(\"You drew me :)\");\n      this.rects.push(drawn);\n\n      this.setState({ finishedRect: undefined });\n    } else if (\n      this.state.gesture &&\n      this.state.gesture.inProgressRect.startingLatLng &&\n      this.state.gesture.inProgressRect.endingLatLng\n    ) {\n      const drawn = L.rectangle(\n        [\n          [...this.state.gesture.inProgressRect.startingLatLng],\n          [...this.state.gesture.inProgressRect.endingLatLng],\n        ],\n        {\n          color: \"#ff7800\",\n          weight: 5,\n        }\n      ).addTo(this.map);\n\n      drawn[\"temporary\"] = true;\n      this.rects.push(drawn);\n    }\n  }\n\n  openInfo = () => {\n    notification.destroy();\n    this.setState({ modalOpen: true });\n  };\n\n  closeModal = (e) => {\n    this.setState({\n      modalOpen: false,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <div id=\"map\" />\n        <Button\n          type=\"primary\"\n          onClick={this.openInfo}\n          style={{\n            position: \"absolute\",\n            bottom: 5,\n            left: 5,\n            zIndex: 999,\n          }}\n        >\n          {React.createElement(InfoCircleOutlined)}\n        </Button>\n\n        <Modal\n          title=\"Drawing in Leaflet\"\n          visible={this.state.modalOpen}\n          footer={[\n            <Button key=\"ok\" onClick={this.closeModal}>\n              OK\n            </Button>,\n          ]}\n        >\n          <p>\n            Leaflet does not have built-in support for a robust drawing feature.\n            Drawing a rectangle is easy enough to do, but a full-fledged drawing\n            system is way more complex. Click the map once to anchor one point\n            and then click another point to finish the rectangle. See source for\n            additional comments.\n          </p>\n        </Modal>\n      </>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class GeoJson extends React.Component {\n  async componentDidMount() {\n    document.title = \"Leaflet | GeoJson Example\";\n\n    const L = window.L;\n\n    const mymap = L.map(\"map\").setView([37.71859, -92.007813], 4);\n\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution:\n        '& <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(mymap);\n\n    const states = await (\n      await fetch(`${window.location.origin}/${window.location.pathname.split(\"/\")[1]}/states.json`)\n    ).json();\n    const twitter = await (\n      await fetch(`${window.location.origin}/${window.location.pathname.split(\"/\")[1]}/twitter.json`)\n    ).json();\n\n    L.geoJSON(states, {\n      onEachFeature: (feature, layer) => {\n        if (feature.properties) {\n          const properties = feature.properties;\n          this.popupElementStates(layer, properties);\n        }\n      },\n    }).addTo(mymap);\n\n    L.geoJSON(twitter, {\n      onEachFeature: (feature, layer) => {\n        if (feature.properties) {\n          const properties = feature.properties;\n          this.popupElementTwitter(layer, properties);\n        }\n      },\n    }).addTo(mymap);\n  }\n\n  popupElementStates(layer, properties) {\n    layer.bindPopup(`Name: ${properties.name} id: ${properties.id}`);\n  }\n\n  popupElementTwitter(layer, properties) {\n    layer.bindPopup(`Text: ${properties.text} user: ${properties.user}`);\n  }\n\n  render() {\n    return (\n      <>\n        <div id=\"map\" />\n      </>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class Popup extends React.Component {\n  componentDidMount() {\n    document.title = \"Leaflet | Popup Example\";\n\n    const L = window.L;\n\n    // Create a Leaflet map that corresponds to the div with id \"map\"\n    const mymap = L.map(\"map\").setView([37.71859, -92.007813], 4);\n\n    // Use OpenStreetMap as the map's tileset\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution:\n        '& <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(mymap);\n\n    // Set a popup to open at the coordinates where a mouse click occurrs\n    mymap.on(\"click\", (e) => {\n      L.popup()\n        .setLatLng(e.latlng)\n        .setContent(\"You clicked the map at \" + e.latlng.toString())\n        .openOn(mymap);\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div id=\"map\" />\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Button, notification } from \"antd\";\nimport { CaretRightOutlined, PauseOutlined } from \"@ant-design/icons\";\n\nexport default class Radar extends React.Component {\n  L = window.L;\n\n  radarLayers = [];\n  timestamps = [];\n  animationTimer = undefined;\n  animationPosition = -1;\n\n  constructor() {\n    super();\n    this.state = {\n      playing: false,\n    };\n  }\n\n  async componentDidMount() {\n    document.title = \"Leaflet | Radar Example\";\n\n    notification.destroy();\n    notification.info({\n      message: \"Radar\",\n      description:\n        \"Press the play button in the lower-left corner to start the radar animation\",\n      placement: \"topLeft\",\n      duration: 5,\n    });\n\n    this.map = this.L.map(\"map\").setView([37.71859, -92.007813], 5);\n\n    this.L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution:\n        '& <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(this.map);\n\n    this.timestamps = await (\n      await fetch(\"https://api.rainviewer.com/public/maps.json\")\n    ).json();\n  }\n\n  componentWillUnmount() {\n    notification.destroy();\n  }\n\n  /**\n   * Animation functions\n   * @param ts\n   */\n  addLayer = (ts) => {\n    if (!this.radarLayers[ts]) {\n      this.radarLayers[ts] = new this.L.TileLayer(\n        \"https://tilecache.rainviewer.com/v2/radar/\" +\n          ts +\n          \"/256/{z}/{x}/{y}/2/1_1.png\",\n        {\n          tileSize: 256,\n          opacity: 0.001,\n          zIndex: ts,\n        }\n      );\n    }\n\n    if (!this.map.hasLayer(this.radarLayers[ts])) {\n      this.map.addLayer(this.radarLayers[ts]);\n    }\n  };\n\n  changeRadarPosition = (position, preloadOnly) => {\n    while (position >= this.timestamps.length) {\n      position -= this.timestamps.length;\n    }\n    while (position < 0) {\n      position += this.timestamps.length;\n    }\n\n    var currentTimestamp = this.timestamps[this.animationPosition];\n    var nextTimestamp = this.timestamps[position];\n\n    this.addLayer(nextTimestamp);\n\n    if (preloadOnly) {\n      return;\n    }\n\n    this.animationPosition = position;\n\n    if (this.radarLayers[currentTimestamp]) {\n      this.radarLayers[currentTimestamp].setOpacity(0);\n    }\n\n    this.radarLayers[nextTimestamp].setOpacity(100);\n  };\n\n  /**\n   * Stop the animation\n   * Check if the animation timeout is set and clear it.\n   */\n  stop = () => {\n    if (this.animationTimer !== undefined) {\n      clearTimeout(this.animationTimer);\n      this.animationTimer = undefined;\n      this.setState({ playing: false });\n      return true;\n    }\n    return false;\n  };\n\n  play = () => {\n    this.showFrame(this.animationPosition + 1);\n\n    // Main animation driver. Run this function every 500 ms\n    this.animationTimer = setTimeout(this.play, 500);\n    this.setState({ playing: true });\n  };\n\n  showFrame = (nextPosition) => {\n    var preloadingDirection =\n      nextPosition - this.animationPosition > 0 ? 1 : -1;\n\n    this.changeRadarPosition(nextPosition);\n\n    // preload next next frame (typically, +1 frame)\n    // if don't do that, the animation will be blinking at the first loop\n    this.changeRadarPosition(nextPosition + preloadingDirection, true);\n  };\n\n  render() {\n    return (\n      <>\n        <div id=\"map\" />\n        <Button\n          type=\"primary\"\n          style={{\n            position: \"absolute\",\n            bottom: 5,\n            left: 5,\n            height: 35,\n            zIndex: 9999,\n            width: 45,\n          }}\n          onClick={() => (this.state.playing ? this.stop() : this.play())}\n        >\n          {this.state.playing ? <PauseOutlined /> : <CaretRightOutlined />}\n        </Button>\n      </>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class Simple extends React.Component {\n  componentDidMount() {\n    document.title = \"Leaflet | Simple Example\";\n\n    // Since Leaftet is added via the root index.html file, we have to get access to the L object via the window.\n    const L = window.L;\n\n    const map = L.map(\"map\").setView([0, 0], 2);\n\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution:\n        '& <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(map);\n  }\n\n  render() {\n    return (\n      <>\n        <div id=\"map\" />\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport * as turfHelpers from \"@turf/helpers\";\nimport turfCenter from \"@turf/center\";\n\nexport default class Center extends React.Component {\n  async componentDidMount() {\n    document.title = \"Leaflet | Turf Center\";\n\n    const L = window.L;\n\n    const mymap = L.map(\"map\").setView([37.71859, -92.007813], 4);\n\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution:\n        '& <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(mymap);\n\n    const states = await (\n      await fetch(`${window.location.origin}/${window.location.pathname.split(\"/\")[1]}/states.json`)\n    ).json();\n\n    const turfFeatureCollection = turfHelpers.featureCollection(states.features);\n    const allCenters = [];\n\n    turfFeatureCollection.features.forEach((feature) => {\n      const center = turfCenter(feature);\n      center.properties = {\n        name: feature.properties.name || \"\",\n      };\n      allCenters.push(center);\n    });\n\n    L.geoJSON(states, {\n      onEachFeature: (feature, layer) => {\n        // does this feature have a property named popupContent?\n        if (feature.properties) {\n          const properties = feature.properties;\n          this.popupElementStates(layer, properties);\n        }\n      },\n    }).addTo(mymap);\n\n    const centerFeatureCollection = turfHelpers.featureCollection(allCenters);\n    L.geoJSON(centerFeatureCollection, {\n      onEachFeature: (feature, layer) => {\n        if (feature.properties) {\n          const properties = feature.properties;\n          this.popupElementCenter(layer, properties);\n        }\n      },\n    }).addTo(mymap);\n  }\n\n  popupElementStates(layer, properties) {\n    layer.bindPopup(`Name: ${properties.name} id: ${properties.id}`);\n  }\n\n  popupElementCenter(layer, properties) {\n    layer.bindPopup(`Center of ${properties.name}`);\n  }\n\n  render() {\n    return (\n      <>\n        <div id=\"map\" />\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport * as turfHelpers from \"@turf/helpers\";\nexport default class Connect extends React.Component {\n  async componentDidMount() {\n    document.title = \"Leaflet | Turf LineString\";\n\n    const L = window.L;\n\n    const mymap = L.map(\"map\").setView([37.71859, -92.007813], 4);\n\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      attribution:\n        '& <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(mymap);\n\n    const twitter = await (\n      await fetch(`${window.location.origin}/${window.location.pathname.split(\"/\")[1]}/twitter.json`)\n    ).json();\n\n    const turfFeatureCollection = turfHelpers.featureCollection(twitter.features);\n\n    const flatCoords = [];\n    turfFeatureCollection.features.forEach((feature) => {\n      flatCoords.push(feature.geometry.coordinates);\n    });\n\n    const lineString = turfHelpers.lineString(flatCoords);\n\n    L.geoJSON(twitter, {\n      onEachFeature: (feature, layer) => {\n        // does this feature have a property named popupContent?\n        if (feature.properties) {\n          const properties = feature.properties;\n          this.popupElementTwitter(layer, properties);\n        }\n      },\n    }).addTo(mymap);\n\n    L.geoJSON(lineString).addTo(mymap);\n  }\n\n  popupElementTwitter(layer, properties) {\n    layer.bindPopup(`Text: ${properties.text} user: ${properties.user}`);\n  }\n\n  render() {\n    return (\n      <>\n        <div id=\"map\" />\n      </>\n    );\n  }\n}\n","import \"antd/dist/antd.css\";\nimport React from \"react\";\nimport ComponentWrapper from \"../ComponentWrapper\";\nimport Drawing from \"./drawing\";\nimport GeoJSON from \"./geojson\";\nimport Popup from \"./popup\";\nimport Radar from \"./radar\";\nimport Simple from \"./simple\";\nimport Center from \"./turf/center\";\nimport Connect from \"./turf/connect\";\nimport \"./leaflet.css\";\n\nexport default function Leaflet() {\n  function mapResolver(key) {\n    switch (key) {\n      case \"1\":\n        return <Simple />;\n      case \"2\":\n        return <Drawing />;\n      case \"3\":\n        return <Popup />;\n      case \"4\":\n        return <GeoJSON />;\n      case \"5\":\n        return <Connect />;\n      case \"6\":\n        return <Center />;\n      case \"7\":\n        return <Radar />;\n      default:\n        return <Simple />;\n    }\n  }\n\n  return <ComponentWrapper framework=\"leaflet\" mapResolver={mapResolver} />;\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { notification } from \"antd\";\nimport Polygon from \"ol/geom/Polygon\";\nimport Draw, { createBox, createRegularPolygon } from \"ol/interaction/Draw\";\nimport { Tile as TileLayer, Vector as VectorLayer } from \"ol/layer\";\nimport Map from \"ol/Map\";\nimport { OSM, Vector as VectorSource } from \"ol/source\";\nimport View from \"ol/View\";\nimport React from \"react\";\n\nexport default class Drawing extends React.Component {\n  constructor() {\n    super();\n    this.draw = undefined;\n    this.map = undefined;\n    this.source = undefined;\n    this.vector = undefined;\n    this.raster = undefined;\n  }\n\n  componentDidMount() {\n    document.title = \"OpenLayers | Drawing Example\";\n\n    notification.destroy();\n    notification.info({\n      message: \"Drawing Instructions\",\n      description:\n        \"Choose the shape type from the bottom-right corner to draw arbitrary shapes onto the map.\",\n      placement: \"topLeft\",\n      duration: 10,\n    });\n\n    this.raster = new TileLayer({\n      source: new OSM(),\n    });\n\n    this.source = new VectorSource({ wrapX: false });\n\n    this.vector = new VectorLayer({\n      source: this.source,\n    });\n\n    this.map = new Map({\n      layers: [this.raster, this.vector],\n      target: \"map\",\n      view: new View({\n        center: [-11000000, 4600000],\n        zoom: 4,\n      }),\n    });\n  }\n\n  componentWillUnmount() {\n    notification.destroy();\n  }\n\n  addInteraction(event) {\n    let value = event.target.value;\n\n    if (value !== \"None\") {\n      let geometryFunction;\n      if (value === \"Square\") {\n        value = \"Circle\";\n        geometryFunction = createRegularPolygon(4);\n      } else if (value === \"Box\") {\n        value = \"Circle\";\n        geometryFunction = createBox();\n      } else if (value === \"Star\") {\n        value = \"Circle\";\n        geometryFunction = function (coordinates, geometry) {\n          const center = coordinates[0];\n          const last = coordinates[1];\n          const dx = center[0] - last[0];\n          const dy = center[1] - last[1];\n          const radius = Math.sqrt(dx * dx + dy * dy);\n          const rotation = Math.atan2(dy, dx);\n          const newCoordinates = [];\n          const numPoints = 12;\n          for (let i = 0; i < numPoints; ++i) {\n            const angle = rotation + (i * 2 * Math.PI) / numPoints;\n            const fraction = i % 2 === 0 ? 1 : 0.5;\n            const offsetX = radius * fraction * Math.cos(angle);\n            const offsetY = radius * fraction * Math.sin(angle);\n            newCoordinates.push([center[0] + offsetX, center[1] + offsetY]);\n          }\n          newCoordinates.push(newCoordinates[0].slice());\n          if (!geometry) {\n            geometry = new Polygon([newCoordinates]);\n          } else {\n            geometry.setCoordinates([newCoordinates]);\n          }\n          return geometry;\n        };\n      }\n\n      this.draw = new Draw({\n        source: this.source,\n        type: value,\n        geometryFunction: geometryFunction,\n      });\n\n      this.map.addInteraction(this.draw);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div id=\"map\"></div>\n        <form style={{ position: \"absolute\", bottom: 0, left: 5 }}>\n          <label>Shape type &nbsp;</label>\n          <select\n            id=\"type\"\n            onChange={(event) => {\n              this.map.removeInteraction(this.draw);\n              this.addInteraction(event);\n            }}\n          >\n            <option value=\"None\">None</option>\n            <option value=\"Circle\">Circle</option>\n            <option value=\"Square\">Square</option>\n            <option value=\"Box\">Box</option>\n            <option value=\"Star\">Star</option>\n          </select>\n        </form>\n      </>\n    );\n  }\n}\n","import olCircle from \"ol/style/Circle\";\nimport olFill from \"ol/style/Fill\";\nimport olStroke from \"ol/style/Stroke\";\nimport olStyle from \"ol/style/Style\";\nimport olText from \"ol/style/Text\";\n\n// colors\nconst blue = [0, 153, 255, 1];\nconst green = [0, 255, 64, 1];\nconst red = [242, 13, 13, 1];\nconst black = [0, 0, 0, 1];\nconst white = [255, 255, 255, 1];\n\nexport const styleFunctionTwitter = () => {\n  const width = 3;\n\n  return [\n    new olStyle({\n      image: new olCircle({\n        radius: width * 2,\n        fill: new olFill({\n          color: blue,\n        }),\n        stroke: new olStroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Number.MAX_SAFE_INTEGER,\n    }),\n  ];\n};\n\nexport const styleFunctionEnrichedTwitter = (feature) => {\n  const sentiment = feature.getProperties().sentiment || \"\";\n  const fillColor = getColorFromSentiment(sentiment);\n  const width = 3;\n\n  return [\n    new olStyle({\n      image: new olCircle({\n        radius: width * 2,\n        fill: new olFill({\n          color: fillColor,\n        }),\n        stroke: new olStroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Number.MAX_SAFE_INTEGER,\n    }),\n  ];\n};\n\nfunction getColorFromSentiment(sentiment) {\n  sentiment = sentiment.toLowerCase();\n\n  if (sentiment.includes(\"positive\")) {\n    return green;\n  } else if (sentiment.includes(\"neutral\")) {\n    return blue;\n  } else if (sentiment.includes(\"negative\")) {\n    return red;\n  } else {\n    return black;\n  }\n}\n\nexport const styleFunctionStates = (feature) => {\n  const color = feature.getProperties().selected ? \"#FF6347\" : \"#7FDBFF33\";\n  const name = feature.getProperties().name;\n  return [\n    new olStyle({\n      fill: new olFill({ color: color }),\n      stroke: new olStroke({\n        color: \"#0074D9\",\n        width: 2,\n      }),\n      text: new olText({ text: name }),\n    }),\n  ];\n};\n\nexport function styleFunctionTwitterCluster(feature) {\n  const features = feature.get(\"features\");\n  const size = features.length;\n\n  if (size === 0) return;\n\n  return size > 1\n    ? new olStyle({\n        image: new olCircle({\n          radius: 10,\n          stroke: new olStroke({\n            color: \"#fff\",\n          }),\n          fill: new olFill({\n            color: \"#3399CC\",\n          }),\n        }),\n        text: new olText({\n          text: size.toString(),\n          fill: new olFill({\n            color: \"#fff\",\n          }),\n        }),\n        zIndex: Number.MAX_SAFE_INTEGER,\n      })\n    : styleFunctionEnrichedTwitter(features[0]);\n}\n\nexport function mapHasLayer(map, layer) {\n  const targetProperties = layer.getProperties();\n  const allLayers = map.getLayers();\n\n  let result = false;\n\n  allLayers.forEach((currLayer) => {\n    const currLayerProperties = currLayer.getProperties();\n\n    if (\n      currLayerProperties &&\n      targetProperties &&\n      currLayerProperties.url === targetProperties.url\n    ) {\n      result = true;\n      return;\n    }\n  });\n\n  return result;\n}\n\nexport function getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function isCluster(feature) {\n  if (!feature || !feature.get(\"features\")) {\n    return false;\n  }\n  return feature.get(\"features\").length >= 1;\n}\n","import GeoJSON from \"ol/format/GeoJSON\";\nimport { Tile as TileLayer } from \"ol/layer\";\nimport olVectorLayer from \"ol/layer/Vector\";\nimport Map from \"ol/Map\";\nimport \"ol/ol.css\";\nimport Overlay from \"ol/Overlay\";\nimport { OSM } from \"ol/source\";\nimport olVectorSource from \"ol/source/Vector\";\nimport View from \"ol/View\";\nimport React from \"react\";\nimport { styleFunctionStates, styleFunctionTwitter } from \"./util\";\n\nexport default class GeoJson extends React.Component {\n  async componentDidMount() {\n    document.title = \"OpenLayers | GeoJson Example\";\n\n    const container = document.getElementById(\"popup\");\n    const content = document.getElementById(\"popup-content\");\n    const closer = document.getElementById(\"popup-closer\");\n    /**\n     * Create an overlay to anchor the popup to the map.\n     */\n    const overlay = new Overlay({\n      element: container,\n      autoPan: true,\n      autoPanAnimation: {\n        duration: 250,\n      },\n    });\n\n    /**\n     * Add a click handler to hide the popup.\n     * @return {boolean} Don't follow the href.\n     */\n    closer.onclick = function () {\n      overlay.setPosition(undefined);\n      closer.blur();\n      return false;\n    };\n\n    try {\n      const layer1 = new olVectorLayer({\n        source: new olVectorSource({\n          format: new GeoJSON(),\n          url: `${window.location.origin}/${window.location.pathname.split(\"/\")[1]}/twitter.json`,\n        }),\n        style: styleFunctionTwitter,\n      });\n\n      const layer2 = new olVectorLayer({\n        source: new olVectorSource({\n          format: new GeoJSON(),\n          url: `${window.location.origin}/${window.location.pathname.split(\"/\")[1]}/states.json`,\n        }),\n        style: styleFunctionStates,\n      });\n\n      const map = new Map({\n        layers: [\n          new TileLayer({\n            source: new OSM(),\n          }),\n          layer1,\n          layer2,\n        ],\n        target: \"map\",\n        overlays: [overlay],\n        view: new View({\n          center: [-11000000, 4600000],\n          zoom: 4,\n        }),\n      });\n\n      map.on(\"singleclick\", function (event) {\n        const features = [];\n        map.forEachFeatureAtPixel(event.pixel, function (feature, layer) {\n          features.push(feature);\n        });\n        if (features.length > 0) {\n          const coordinate = event.coordinate;\n          let popupString = \"\";\n          for (let i = 0; i < features.length; i++) {\n            const properties = features[i].getProperties();\n            let s;\n            if (properties.name) {\n              s = properties.name;\n            } else {\n              s = properties.text;\n            }\n            popupString += `Feature ${i}: ${s}<br/>`;\n          }\n\n          content.innerHTML = popupString;\n          overlay.setPosition(coordinate);\n        }\n      });\n    } catch (er) {\n      console.log(er);\n      return null;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div id=\"map\"></div>;\n        <div id=\"popup\" className=\"ol-popup\">\n          <div id=\"popup-closer\" className=\"ol-popup-closer\"></div>\n          <div id=\"popup-content\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport XYZ from \"ol/source/XYZ\";\nimport React from \"react\";\nimport * as olProj from \"ol/proj\";\nimport Overlay from \"ol/Overlay\";\nimport { toStringHDMS } from \"ol/coordinate\";\n\nexport default class Popup extends React.Component {\n  componentDidMount() {\n    document.title = \"OpenLayers | Popup Example\";\n\n    // Obtain reference to the HTMLElements that will house the popup content\n    const container = document.getElementById(\"popup\");\n    const content = document.getElementById(\"popup-content\");\n    const closer = document.getElementById(\"popup-closer\");\n\n    // Create an overlay to anchor the popup to the map\n    const overlay = new Overlay({\n      element: container,\n      autoPan: true,\n      autoPanAnimation: {\n        duration: 250,\n      },\n    });\n\n    // Add a click handler to hide the popup\n    closer.onclick = function () {\n      overlay.setPosition(undefined);\n      closer.blur();\n      return false;\n    };\n\n    // Create a new map object that uses OpenStreetMap as it's base layer and attach the above overlay\n    const map = new Map({\n      target: \"map\",\n      layers: [\n        new TileLayer({\n          source: new XYZ({\n            url: \"https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          }),\n        }),\n      ],\n      overlays: [overlay],\n      view: new View({\n        center: [0, 0],\n        zoom: 2,\n      }),\n    });\n\n    // Add a click handler to the map to render the popup\n    map.on(\"singleclick\", function (evt) {\n      const coordinate = evt.coordinate;\n      // conver the cordinate to a 'readable' string\n      const hdms = toStringHDMS(olProj.toLonLat(coordinate));\n\n      content.innerHTML = \"<p>You clicked here:</p><code>\" + hdms + \"</code>\";\n      overlay.setPosition(coordinate);\n    });\n  }\n\n  render() {\n    // Popup MUST have a parent div. You cannot use React's fragments for popups with OL!\n    return (\n      <div className=\"wrapper\">\n        <div id=\"map\"></div>\n        <div id=\"popup\" className=\"ol-popup\">\n          <div id=\"popup-closer\" className=\"ol-popup-closer\"></div>\n          <div id=\"popup-content\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport XYZ from \"ol/source/XYZ\";\nimport React from \"react\";\nimport { OSM } from \"ol/source\";\nimport { Button, notification, Slider } from \"antd\";\nimport {\n  CaretRightOutlined,\n  PauseOutlined,\n  LeftOutlined,\n  RightOutlined,\n} from \"@ant-design/icons\";\nimport {\n  mapHasLayer,\n  styleFunctionEnrichedTwitter,\n  styleFunctionTwitterCluster,\n  isCluster,\n  getRandomInt,\n} from \"./util\";\nimport olVectorLayer from \"ol/layer/Vector\";\nimport olVectorSource from \"ol/source/Vector\";\nimport GeoJSON from \"ol/format/GeoJSON\";\nimport Overlay from \"ol/Overlay\";\nimport olClusterSource from \"ol/source/Cluster\";\n\nexport default class Simple extends React.Component {\n  map = undefined;\n\n  radarLayers = [];\n  timestamps = [];\n  jsDates = [];\n  animationTimer = undefined;\n  animationPosition = -1;\n\n  // Group tweets by time\n  tweetsByTime = [];\n  tweetClusterLayer = undefined;\n  twitterLayer = undefined;\n\n  constructor() {\n    super();\n    this.state = {\n      playing: false,\n      loaded: false,\n      showTwitter: false,\n      showRadar: true,\n      inputValue: 60,\n    };\n  }\n  async componentDidMount() {\n    document.title = \"OpenLayers | Radar Example\";\n\n    // Create the overlay and the popup elements\n    const container = document.getElementById(\"popup\");\n    const content = document.getElementById(\"popup-content\");\n    const closer = document.getElementById(\"popup-closer\");\n    const overlay = this.createOverlay(container, content, closer);\n\n    // Load the data from a remote geoserver or a local file.\n    // Note we are not awaiting so that the map will load and be responsive while the data is fetched.\n    this.loadData();\n\n    this.map = new Map({\n      target: \"map\",\n      layers: [\n        new TileLayer({\n          source: new OSM(),\n        }),\n      ],\n      view: new View({\n        center: [-11000000, 4600000],\n        zoom: 5,\n      }),\n      overlays: [overlay],\n    });\n\n    this.map.on(\"singleclick\", (event) => {\n      const features = [];\n\n      // iterate all features at the click pixel\n      this.map.forEachFeatureAtPixel(event.pixel, function (feature, layer) {\n        // Have to check to see if the feature is a cluster. A cluser will be nsted in another fearure and we will have to handle it differently.\n        if (isCluster(feature)) {\n          const clusterFeatures = feature.get(\"features\");\n\n          for (const currFeature of clusterFeatures) {\n            const properties = currFeature.getProperties();\n            if (properties.twitter) {\n              features.push(currFeature);\n            }\n          }\n        } else {\n          const properties = feature.getProperties();\n          if (properties.twitter) {\n            features.push(feature);\n          }\n        }\n      });\n\n      if (features.length > 0) {\n        const coordinate = event.coordinate;\n        let popupString = \"\";\n\n        for (let i = 0; i < features.length; i++) {\n          const properties = features[i].getProperties();\n          let str = `User <em><b>${properties.user}</b></em> tweeted \"${properties.text}\" near ${properties.place}.<br/>`;\n          str += `The tweet seems to have a <b>${properties.sentiment}</b> sentiment.`;\n\n          popupString += `Feature ${i + 1}:<br/> ${str}<br/>`;\n          // If there is at least one feature, add another line break\n          if (i < features.length - 1) popupString += \"<br/>\";\n        }\n\n        content.innerHTML = popupString;\n        overlay.setPosition(coordinate);\n      } else {\n        overlay.setPosition(undefined);\n        closer.blur();\n      }\n    });\n  }\n\n  createOverlay(container, content, closer) {\n    const overlay = new Overlay({\n      element: container,\n      autoPan: true,\n      autoPanAnimation: {\n        duration: 250,\n      },\n    });\n\n    closer.onclick = function () {\n      overlay.setPosition(undefined);\n      closer.blur();\n      return false;\n    };\n\n    return overlay;\n  }\n\n  async loadData() {\n    this.timestamps = await (\n      await fetch(\"https://api.rainviewer.com/public/maps.json\")\n    ).json();\n\n    // convert the unix timestamps from rainviewer to a js timestamp\n    this.jsDates = this.timestamps.map((ts) => {\n      return new Date(ts * 1000);\n    });\n\n    const baseUrl = this.props.remote\n      ? this.props.remote\n      : `${window.location.origin}/${window.location.pathname.split(\"/\")[1]}`;\n\n    // Remove any current notifications and display the loading one.\n    notification.destroy();\n    notification.info({\n      message: \"Please Wait\",\n      description: \"Loading data...\",\n      placement: \"topLeft\",\n      duration: 0,\n    });\n\n    let json;\n\n    try {\n      if (this.props.remote) {\n        const maxFeatures = 50_000;\n        const url = `${baseUrl}/streaming/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=streaming%3Astl-twitter&TIME=PT3H/PRESENT&width=768&height=330&srs=EPSG%3A4326&maxFeatures=${maxFeatures}&outputFormat=application%2Fjson`;\n        json = await (await fetch(url)).json();\n      } else {\n        json = await (await fetch(`${baseUrl}/enriched_twitter.json`)).json();\n      }\n    } catch (err) {\n      notification.destroy();\n      notification.error({\n        placement: \"topLeft\",\n        description:\n          \"Unable to get data. If not already, try to use local data if problem persists.\",\n      });\n      return;\n    }\n\n    // do some logic for each feature\n    json.features.map((feature) => {\n      const props = feature.properties;\n\n      // this helps in the case we have other non-twitter features at the same pixel when clicking\n      props[\"twitter\"] = true;\n\n      if (this.props.remote) {\n        const unixTimestampOfTweet = new Date(props[\"dtg\"]).getTime() / 1000;\n        // find the matching bucket\n        const ts = this.findMatchingTimestamp(unixTimestampOfTweet);\n        props[\"dtg\"] = ts;\n      } else {\n        // create some random date information for local data\n        const maxIndex = this.timestamps.length - 1;\n        const dateIdx = getRandomInt(0, maxIndex);\n        props[\"dtg\"] = this.jsDates[dateIdx].getTime() / 1000;\n      }\n\n      feature.properties = { ...props };\n      return feature;\n    });\n\n    const format = new GeoJSON();\n\n    // convert the raw jason into geojson object for further processing\n    format.readFeatures(json).map((feature) => {\n      const properties = feature.getProperties();\n      const ts = properties.dtg;\n\n      // add the feature to the correct time bucket\n      if (!this.tweetsByTime[ts]) this.tweetsByTime[ts] = [];\n      this.tweetsByTime[ts].push(feature);\n\n      // GeoJson's default projection is 4326 while OL's is 3857 we need to transform\n      feature.getGeometry().transform(\"EPSG:4326\", \"EPSG:3857\");\n      return feature;\n    });\n\n    this.tweetClusterLayer = new olVectorLayer({\n      source: new olClusterSource({\n        distance: this.state.inputValue,\n        source: new olVectorSource({\n          format: new GeoJSON(),\n        }),\n      }),\n      style: styleFunctionTwitterCluster,\n      zIndex: Number.MAX_SAFE_INTEGER,\n    });\n\n    this.twitterLayer = new olVectorLayer({\n      source: new olVectorSource({\n        format: new GeoJSON(),\n      }),\n      style: styleFunctionEnrichedTwitter,\n      zIndex: Number.MAX_SAFE_INTEGER,\n    });\n\n    this.map.addLayer(this.tweetClusterLayer);\n    // optional call to only have non-clustered tweets.\n    // this.map.addLayer(this.twitterLayer);\n    this.showFrame(this.animationPosition);\n    this.setState({ loaded: true });\n\n    notification.destroy();\n    notification.success({\n      message: \"Success\",\n      description: `Loaded ${json.features.length} tweets onto the map!`,\n      duration: 10,\n      placement: \"topLeft\",\n    });\n    notification.info({\n      message: \"Radar\",\n      description:\n        \"Press the play button in the lower-left corner to start the radar animation.\\n You can page through each frame using the arrows and change the radius of the clutering algorithm with the slider.\",\n      placement: \"topLeft\",\n      duration: 12,\n    });\n  }\n\n  componentWillUnmount() {\n    notification.destroy();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.showTwitter !== this.state.showTwitter) {\n      this.twitterLayer.setVisible(!this.twitterLayer.getVisible());\n      this.tweetClusterLayer.setVisible(!this.tweetClusterLayer.getVisible());\n    }\n    if (prevState.showRadar !== this.state.showRadar) {\n      this.state.showRadar\n        ? this.radarLayers[this.timestamps[this.animationPosition]].setOpacity(\n            100\n          )\n        : this.radarLayers[this.timestamps[this.animationPosition]].setOpacity(\n            0\n          );\n    }\n  }\n\n  // Next 5 functions were adapted from RainViewer's OpenLayers example\n  addLayer = (ts) => {\n    if (!this.radarLayers[ts]) {\n      const url =\n        \"https://tilecache.rainviewer.com/v2/radar/\" +\n        ts +\n        \"/256/{z}/{x}/{y}/2/1_1.png\";\n\n      const layer = new TileLayer({\n        source: new XYZ({\n          url,\n          tileSize: 256,\n        }),\n        zIndex: ts,\n        opacity: 0.001,\n      });\n      layer.setProperties({ url });\n      this.radarLayers[ts] = layer;\n    }\n\n    if (!mapHasLayer(this.map, this.radarLayers[ts])) {\n      this.map.addLayer(this.radarLayers[ts]);\n    }\n\n    const tweetsInTimeBucket = this.tweetsByTime[ts];\n    if (tweetsInTimeBucket && tweetsInTimeBucket.length > 0) {\n      // Have to get source twice to access the 'feature' source\n      this.tweetClusterLayer\n        .getSource()\n        .getSource()\n        .addFeatures(tweetsInTimeBucket);\n      this.twitterLayer.getSource().addFeatures(tweetsInTimeBucket);\n    }\n  };\n\n  changeRadarPosition = (position, preloadOnly) => {\n    while (position >= this.timestamps.length) {\n      position -= this.timestamps.length;\n    }\n    while (position < 0) {\n      position += this.timestamps.length;\n    }\n\n    var currentTimestamp = this.timestamps[this.animationPosition];\n    var nextTimestamp = this.timestamps[position];\n\n    this.twitterLayer.getSource().clear();\n    // Have to get source twice to access the 'feature' source\n    this.tweetClusterLayer.getSource().getSource().clear();\n\n    this.addLayer(nextTimestamp);\n\n    if (preloadOnly) {\n      return;\n    }\n\n    this.animationPosition = position;\n\n    if (!this.state.showRadar) {\n      return;\n    }\n\n    if (this.radarLayers[currentTimestamp]) {\n      this.radarLayers[currentTimestamp].setOpacity(0);\n    }\n\n    this.radarLayers[nextTimestamp].setOpacity(100);\n  };\n\n  stop = () => {\n    if (this.animationTimer !== undefined) {\n      clearTimeout(this.animationTimer);\n      this.animationTimer = undefined;\n      this.setState({ playing: false });\n      return true;\n    }\n    return false;\n  };\n\n  play = () => {\n    this.showFrame(this.animationPosition + 1);\n\n    // Main animation driver. Run this function every 500 ms\n    this.animationTimer = setTimeout(this.play, 500);\n    this.setState({ playing: true });\n  };\n\n  showFrame = (nextPosition) => {\n    const preloadingDirection =\n      nextPosition - this.animationPosition > 0 ? 1 : -1;\n\n    this.changeRadarPosition(nextPosition);\n\n    // preload next next frame (typically, +1 frame)\n    // if don't do that, the animation will be blinking at the first loop\n    this.changeRadarPosition(nextPosition + preloadingDirection, true);\n  };\n\n  getTimeDisplay() {\n    if (this.jsDates.length === 0) return new Date().toLocaleString(\"en-us\");\n\n    const jsDateObj =\n      this.animationPosition === -1\n        ? this.jsDates[0]\n        : this.jsDates[this.animationPosition];\n\n    const timeString = jsDateObj.toLocaleString(\"en-us\");\n    return (\n      <p\n        style={{\n          fontSize: 12,\n          textAlign: \"center\",\n          alignSelf: \"center\",\n          justifySelf: \"center\",\n          margin: 0,\n          color: \"black\",\n        }}\n      >\n        {timeString}\n      </p>\n    );\n  }\n\n  // Direction is either 'l' for left or 'r' for right\n  stepPosition = (direction) => {\n    if (!this.state.loaded || this.state.playing) return;\n    const newPosition =\n      direction === \"l\"\n        ? this.animationPosition - 1\n        : this.animationPosition + 1;\n    this.showFrame(newPosition);\n    // since we adpted a generic openlayers example, react was not used. None of the radar\n    // variables are tied to state. In order to avoid a large refactor, just force an update to rerender.\n    this.forceUpdate();\n  };\n\n  onSliderChange = (val) => {\n    this.setState({ inputValue: val });\n    this.tweetClusterLayer.getSource().setDistance(val);\n  };\n\n  findMatchingTimestamp(ts) {\n    let leftIdx = 0;\n    let rightIdx = 1;\n\n    while (rightIdx < this.timestamps.length - 1) {\n      if (ts >= this.timestamps[leftIdx] && ts < this.timestamps[rightIdx]) {\n        return this.timestamps[leftIdx];\n      }\n      leftIdx++;\n      rightIdx++;\n    }\n\n    // hack the date if not matched\n    const maxIndex = this.timestamps.length - 1;\n    const dateIdx = getRandomInt(0, maxIndex);\n    return this.jsDates[dateIdx].getTime() / 1000;\n  }\n\n  render() {\n    const timeDisplay = this.getTimeDisplay();\n\n    return (\n      <div className=\"wrapper\">\n        <div id=\"map\" />\n        <div id=\"popup\" className=\"ol-popup\">\n          <div id=\"popup-closer\" className=\"ol-popup-closer\"></div>\n          <div id=\"popup-content\"></div>\n        </div>\n        <Button\n          type=\"primary\"\n          onClick={() =>\n            this.setState({ showTwitter: !this.state.showTwitter })\n          }\n          style={{\n            position: \"absolute\",\n            bottom: 85,\n            left: 5,\n            height: 35,\n            width: 125,\n          }}\n        >\n          Toggle Tweets\n        </Button>\n        <Button\n          type=\"primary\"\n          onClick={() => this.setState({ showRadar: !this.state.showRadar })}\n          style={{\n            position: \"absolute\",\n            bottom: 125,\n            left: 5,\n            width: 125,\n          }}\n        >\n          Toggle Radar\n        </Button>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            position: \"absolute\",\n            bottom: 5,\n            left: 5,\n            height: 35,\n            width: 300,\n            zIndex: 9999,\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Button\n            type=\"primary\"\n            style={{\n              width: 45,\n            }}\n            onClick={() => (this.state.playing ? this.stop() : this.play())}\n          >\n            {this.state.playing ? <PauseOutlined /> : <CaretRightOutlined />}\n          </Button>\n          <div\n            style={{\n              position: \"absolute\",\n              paddingLeft: 5,\n              left: 0,\n              bottom: 40,\n              display: \"flex\",\n              flexDirection: \"row\",\n              textAlign: \"center\",\n              alignContent: \"center\",\n              alignItems: \"center\",\n              background: \"white\",\n              width: 300,\n              justifyContent: \"space-between\",\n              borderRadius: \"3px\",\n            }}\n          >\n            <p style={{ margin: 0 }}>Grouping Distance</p>\n            <Slider\n              min={0}\n              max={400}\n              step={20}\n              style={{\n                width: 75,\n                flex: 2,\n              }}\n              value={this.state.inputValue}\n              onChange={this.onSliderChange}\n            />\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              marginLeft: 15,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              background: \"white\",\n            }}\n          >\n            <Button\n              type=\"primary\"\n              style={{\n                width: 25,\n                marginRight: 5,\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n              onClick={() => this.stepPosition(\"l\")}\n            >\n              <LeftOutlined />\n            </Button>\n            {timeDisplay}\n            <Button\n              type=\"primary\"\n              style={{\n                width: 25,\n                marginLeft: 5,\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n              onClick={() => this.stepPosition(\"r\")}\n            >\n              <RightOutlined />\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport XYZ from \"ol/source/XYZ\";\nimport React from \"react\";\n\nexport default class Simple extends React.Component {\n  componentDidMount() {\n    document.title = \"OpenLayers | Simple Example\";\n\n    new Map({\n      target: \"map\",\n      layers: [\n        new TileLayer({\n          source: new XYZ({\n            url: \"https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          }),\n        }),\n      ],\n      view: new View({\n        center: [0, 0],\n        zoom: 2,\n      }),\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div id=\"map\"></div>\n      </>\n    );\n  }\n}\n","import * as turfHelpers from \"@turf/helpers\";\nimport turfCenter from \"@turf/center\";\nimport { Map, View } from \"ol\";\nimport GeoJSON from \"ol/format/GeoJSON\";\nimport TileLayer from \"ol/layer/Tile\";\nimport olVectorLayer from \"ol/layer/Vector\";\nimport { fromLonLat } from \"ol/proj\";\nimport { OSM } from \"ol/source\";\nimport olVectorSource from \"ol/source/Vector\";\nimport React from \"react\";\nimport { styleFunctionStates } from \"../util\";\nimport Overlay from \"ol/Overlay\";\n\nexport default class Center extends React.Component {\n  async componentDidMount() {\n    document.title = \"OpenLayers | Turf Center\";\n\n    const container = document.getElementById(\"popup\");\n    const content = document.getElementById(\"popup-content\");\n    const closer = document.getElementById(\"popup-closer\");\n    /**\n     * Create an overlay to anchor the popup to the map.\n     */\n    const overlay = new Overlay({\n      element: container,\n      autoPan: true,\n      autoPanAnimation: {\n        duration: 250,\n      },\n    });\n\n    /**\n     * Add a click handler to hide the popup.\n     * @return {boolean} Don't follow the href.\n     */\n    closer.onclick = function () {\n      overlay.setPosition(undefined);\n      closer.blur();\n      return false;\n    };\n\n    const statesResponse = await fetch(`${window.location.origin}/${window.location.pathname.split(\"/\")[1]}/states.json`);\n    const geoJson = await statesResponse.json();\n\n    const source = new olVectorSource();\n    const format = new GeoJSON();\n    const features = format.readFeatures(geoJson);\n\n    // GeoJson's default projection is 4326 while OL's is 3857\n    features.map((feature) =>\n      feature.getGeometry().transform(\"EPSG:4326\", \"EPSG:3857\")\n    );\n\n    // work with raw json\n    for (const feature of geoJson.features) {\n      const polygon = turfHelpers.multiPolygon(feature.geometry.coordinates);\n      const center = turfCenter(polygon);\n      const lineStringFeature = format.readFeature(center);\n      lineStringFeature.setProperties({\n        name: \"Center of \" + feature.properties.name,\n      });\n      source.addFeature(lineStringFeature);\n    }\n\n    source.getFeatures().forEach((feature) => {\n      feature.getGeometry().transform(\"EPSG:4326\", \"EPSG:3857\");\n    });\n\n    const vectorLayer = new olVectorLayer({\n      source: source,\n    });\n\n    const rasterLayer = new TileLayer({\n      source: new OSM(),\n    });\n\n    const statesLayer = new olVectorLayer({\n      source: new olVectorSource({\n        format: new GeoJSON(),\n        features,\n      }),\n      style: styleFunctionStates,\n    });\n\n    const map = new Map({\n      layers: [rasterLayer, vectorLayer, statesLayer],\n      target: document.getElementById(\"map\"),\n      view: new View({\n        center: fromLonLat([-90.81070553065938, 40.716527262756514]),\n        zoom: 4,\n      }),\n      overlays: [overlay],\n    });\n\n    map.on(\"singleclick\", function (event) {\n      const features = [];\n      map.forEachFeatureAtPixel(event.pixel, function (feature, layer) {\n        features.push(feature);\n      });\n      if (features.length > 0) {\n        const coordinate = event.coordinate;\n        let popupString = \"\";\n        for (let i = 0; i < features.length; i++) {\n          const properties = features[i].getProperties();\n          let s;\n          if (properties.name) {\n            s = properties.name;\n          } else {\n            s = properties.text;\n          }\n          popupString += `Feature ${i}: ${s}<br />`;\n        }\n\n        content.innerHTML = popupString;\n        overlay.setPosition(coordinate);\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div id=\"map\"></div>\n        <div id=\"popup\" className=\"ol-popup\">\n          <div id=\"popup-closer\" className=\"ol-popup-closer\"></div>\n          <div id=\"popup-content\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as turfHelpers from \"@turf/helpers\";\nimport { Map, View } from \"ol\";\nimport GeoJSON from \"ol/format/GeoJSON\";\nimport TileLayer from \"ol/layer/Tile\";\nimport olVectorLayer from \"ol/layer/Vector\";\nimport { fromLonLat } from \"ol/proj\";\nimport { OSM } from \"ol/source\";\nimport olVectorSource from \"ol/source/Vector\";\nimport React from \"react\";\nimport { styleFunctionTwitter } from \"../util\";\n\nexport default class Connect extends React.Component {\n  async componentDidMount() {\n    document.title = \"OpenLayers | Turf LineString\";\n\n    const twitterResponse = await fetch(\n      `${window.location.origin}/${window.location.pathname.split(\"/\")[1]}/twitter.json`\n    );\n    const geoJson = await twitterResponse.json();\n\n    const source = new olVectorSource();\n    const format = new GeoJSON();\n    const features = format.readFeatures(geoJson);\n\n    // GeoJson's default projection is 4326 while OL's is 3857\n    features.map((feature) =>\n      feature.getGeometry().transform(\"EPSG:4326\", \"EPSG:3857\")\n    );\n\n    const flatGeometry = [];\n\n    for (const feature of features) {\n      flatGeometry.push(feature.getGeometry().flatCoordinates);\n    }\n\n    const lineString = turfHelpers.lineString(flatGeometry);\n    const lineStringFeature = format.readFeature(lineString);\n\n    source.addFeature(lineStringFeature);\n\n    const vectorLayer = new olVectorLayer({\n      source: source,\n    });\n\n    const rasterLayer = new TileLayer({\n      source: new OSM(),\n    });\n\n    const twitterLayer = new olVectorLayer({\n      source: new olVectorSource({\n        format: new GeoJSON(),\n        features,\n      }),\n      style: styleFunctionTwitter,\n    });\n\n    new Map({\n      layers: [rasterLayer, vectorLayer, twitterLayer],\n      target: document.getElementById(\"map\"),\n      view: new View({\n        center: fromLonLat([-90.81070553065938, 40.716527262756514]),\n        zoom: 4,\n      }),\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div id=\"map\"></div>\n      </>\n    );\n  }\n}\n","import { CloudServerOutlined, HddOutlined } from \"@ant-design/icons\";\nimport { Button } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport React from \"react\";\nimport ComponentWrapper from \"../ComponentWrapper\";\nimport Drawing from \"./drawing\";\nimport GeoJson from \"./geojson\";\nimport Popup from \"./popup\";\nimport Radar from \"./radar\";\nimport Simple from \"./simple\";\nimport Center from \"./turf/center\";\nimport Connect from \"./turf/connect\";\n// custom css to style popups\nimport \"./ol.css\";\n// Openlayer's OWN css\nimport \"ol/ol.css\";\n\nexport default class OpenLayers extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      remote: false,\n      remoteUrl: \"\",\n    };\n  }\n\n  async componentDidMount() {\n    const jsonConfig = await (\n      await fetch(`${window.location.origin}/${window.location.pathname.split(\"/\")[1]}/env.json`)\n    ).json();\n\n    this.setState({\n      remoteUrl: jsonConfig.geoserverUrl,\n    });\n  }\n\n  toggleRemote = () => {\n    this.setState({\n      remote: !this.state.remote,\n    });\n  };\n\n  mapResolver = (key) => {\n    const componentKey = `${String(this.state.remote)}-${key}`;\n\n    switch (key) {\n      case \"1\":\n        return <Simple />;\n      case \"2\":\n        return <Drawing />;\n      case \"3\":\n        return <Popup />;\n      case \"4\":\n        return <GeoJson />;\n      case \"5\":\n        return <Connect />;\n      case \"6\":\n        return <Center />;\n      case \"7\":\n        const dataLocationButton = (\n          <Button\n            type=\"primary\"\n            onClick={this.toggleRemote}\n            style={{\n              position: \"absolute\",\n              top: 45,\n              right: this.state.collapsed ? 5 : \"12.25rem\",\n            }}\n          >\n            {React.createElement(\n              this.state.remote ? CloudServerOutlined : HddOutlined\n            )}\n          </Button>\n        );\n        return (\n          <>\n            <Radar\n              key={componentKey}\n              remote={this.state.remote ? this.state.remoteUrl : undefined}\n            />\n            {dataLocationButton}\n          </>\n        );\n      default:\n        return <Simple />;\n    }\n  };\n\n  render() {\n    return <ComponentWrapper framework=\"ol\" mapResolver={this.mapResolver} />;\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Divider } from \"antd\";\nimport \"./landing-page.css\";\n\nexport default function LandingPage() {\n  return (\n    <div className=\"landing-page\">\n      <Link to=\"/leaflet/1\" id=\"leaflet\" className=\"framework\">\n        <img\n          src=\"https://leafletjs.com/docs/images/logo.png\"\n          alt=\"to leaflet\"\n        />\n      </Link>\n\n      <Divider className=\"divider\" />\n\n      <Link to=\"/ol/1\" id=\"ol\" className=\"framework\">\n        <img\n          src=\"https://financesonline.com/uploads/2019/09/OpenLayers-logo1.png\"\n          alt=\"to openlayers\"\n        />\n      </Link>\n\n      <Divider className=\"divider\" />\n\n      <Link to=\"/mapbox/1\" id=\"mapbox\" className=\"framework\">\n        <img src=\"https://logodix.com/logo/1863638.png\" alt=\"to mapbox\" />\n      </Link>\n    </div>\n  );\n}\n","import React from \"react\";\nimport * as mapbox from \"mapbox-gl/dist/mapbox-gl.js\";\nimport \"@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css\";\nimport * as MapboxDraw from \"@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw\";\nimport { notification } from \"antd\";\n\nexport default class Simple extends React.Component {\n  componentDidMount() {\n    document.title = \"Mapbox | Drawing Example\";\n\n    notification.destroy();\n    notification.info({\n      message: \"Drawing\",\n      description:\n        \"Choose a drawing capability from the toolbar below the zoom controls in the top left of the screen!\",\n      placement: \"topLeft\",\n      duration: 5,\n    });\n\n    mapbox.accessToken = process.env.REACT_APP_MAPBOX_API_KEY;\n\n    const map = new mapbox.Map({\n      container: \"map\",\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [-90, 40],\n      zoom: 3,\n    });\n\n    map.addControl(new mapbox.NavigationControl(), \"top-left\");\n    map.addControl(new MapboxDraw(), \"top-left\");\n  }\n\n  render() {\n    return (\n      <>\n        <div id=\"map\"></div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport * as mapbox from \"mapbox-gl/dist/mapbox-gl.js\";\n\nexport default class Simple extends React.Component {\n  async componentDidMount() {\n    document.title = \"Mapbox | GeoJson Example\";\n    mapbox.accessToken = process.env.REACT_APP_MAPBOX_API_KEY;\n\n    const map = new mapbox.Map({\n      container: \"map\",\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [-90, 40],\n      zoom: 3,\n    });\n    map.addControl(new mapbox.NavigationControl(), \"top-left\");\n\n    map.on(\"load\", async function () {\n      const statesJson = await (\n        await fetch(`${window.location.origin}/${window.location.pathname.split(\"/\")[1]}/states.json`)\n      ).json();\n\n      const twitterJson = await (\n        await fetch(`${window.location.origin}/${window.location.pathname.split(\"/\")[1]}/twitter.json`)\n      ).json();\n\n      map.addSource(\"states\", {\n        type: \"geojson\",\n        data: statesJson,\n      });\n\n      map.addSource(\"twitter\", {\n        type: \"geojson\",\n        data: twitterJson,\n      });\n\n      map.addLayer({\n        id: \"states\",\n        source: \"states\",\n        type: \"fill\",\n        paint: {\n          \"fill-color\": \"#03a9f4\",\n          \"fill-opacity\": 0.4,\n        },\n      });\n\n      map.addLayer({\n        id: \"twitter\",\n        source: \"twitter\",\n        type: \"symbol\",\n        layout: {\n          \"icon-image\": [\n            \"coalesce\",\n            [\"image\", [\"concat\", [\"get\", \"icon\"], \"-15\"]],\n            [\"image\", \"marker-15\"],\n          ],\n        },\n      });\n\n      map.on(\"click\", function (e) {\n        const features = map.queryRenderedFeatures(e.point);\n        if (!features || features.length <= 0) {\n          return;\n        }\n\n        let descStr = \"\";\n        for (let i = 0; i < features.length; i++) {\n          const properties = features[i].properties;\n          if (properties.name) {\n            descStr += `Feature ${i}: ${properties.name}<br/>`;\n          } else if (properties.text) {\n            descStr += `Feature ${i}: ${properties.user} tweeted \"${properties.text}\"</br>`;\n          } else {\n            const unknownString =\n              Object.keys(properties).length > 0\n                ? JSON.stringify(properties)\n                : features[i].layer.id || \"Unknown Layer\";\n\n            descStr += `Feature ${i}: ${unknownString}<br/>`;\n          }\n        }\n\n        const coordinates = e.lngLat;\n\n        new mapbox.Popup()\n          .setLngLat(coordinates)\n          .setHTML(`<p>${descStr}</p>`)\n          .addTo(map);\n      });\n\n      // Change the cursor to a pointer when the mouse is over the states layer.\n      map.on(\"mouseenter\", \"states\", function () {\n        map.getCanvas().style.cursor = \"pointer\";\n      });\n\n      // Change it back to a pointer when it leaves.\n      map.on(\"mouseleave\", \"states\", function () {\n        map.getCanvas().style.cursor = \"\";\n      });\n\n      // Change the cursor to a pointer when the mouse is over the states layer.\n      map.on(\"mouseenter\", \"twitter\", function () {\n        map.getCanvas().style.cursor = \"pointer\";\n      });\n\n      // Change it back to a pointer when it leaves.\n      map.on(\"mouseleave\", \"twitter\", function () {\n        map.getCanvas().style.cursor = \"\";\n      });\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div id=\"map\"></div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport * as mapbox from \"mapbox-gl/dist/mapbox-gl.js\";\n\nexport default class Simple extends React.Component {\n  componentDidMount() {\n    document.title = \"Mapbox | Popup Example\";\n\n    mapbox.accessToken = process.env.REACT_APP_MAPBOX_API_KEY;\n\n    // Construct a new map object.\n    // NOTE: Be sure to set the mapbox.accessToken before calling this!\n    const map = new mapbox.Map({\n      container: \"map\",\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [-90, 40],\n      zoom: 3,\n    });\n\n    map.addControl(new mapbox.NavigationControl(), \"top-left\");\n    map.on(\"click\", function (e) {\n      const lngLat = e.lngLat;\n\n      const htmlStr = `<p>You clicked at ${JSON.stringify(lngLat)}</p>`;\n\n      new mapbox.Popup().setLngLat(lngLat).setHTML(htmlStr).addTo(map);\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div id=\"map\"></div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Button, notification } from \"antd\";\nimport { CaretRightOutlined, PauseOutlined } from \"@ant-design/icons\";\nimport * as mapbox from \"mapbox-gl/dist/mapbox-gl.js\";\n\nexport default class Radar extends React.Component {\n  map = undefined;\n\n  radarObjects = [];\n  timestamps = [];\n  animationTimer = undefined;\n  animationPosition = -1;\n\n  constructor() {\n    super();\n    this.state = {\n      playing: false,\n    };\n  }\n\n  async componentDidMount() {\n    document.title = \"Mapbox | Radar Example\";\n\n    notification.destroy();\n    notification.info({\n      message: \"Radar\",\n      description:\n        \"Press the play button in the lower-left corner to start the radar animation\",\n      placement: \"topLeft\",\n      duration: 5,\n    });\n\n    mapbox.accessToken = process.env.REACT_APP_MAPBOX_API_KEY;\n\n    this.timestamps = await (\n      await fetch(\"https://api.rainviewer.com/public/maps.json\")\n    ).json();\n\n    const tiles = [];\n    const sources = [];\n\n    for (const ts of this.timestamps) {\n      const url = `https://tilecache.rainviewer.com/v2/radar/${ts}/256/{z}/{x}/{y}/2/1_1.png`;\n      const key = `radar-src-${ts}`;\n      const source = {};\n      source[key] = {\n        type: \"raster\",\n        tiles: [url],\n        tileSize: 256,\n      };\n\n      const layer = {\n        id: `radar-layer-${ts}`,\n        type: \"raster\",\n        source: key,\n        minzoom: 0,\n        maxzoom: 22,\n        layout: {\n          visibility: \"visible\",\n        },\n      };\n\n      tiles.push(url);\n      sources.push(source);\n\n      this.radarObjects[ts] = {\n        source,\n        layer,\n      };\n    }\n\n    this.map = new mapbox.Map({\n      container: \"map\", // container id\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [-74.5, 40], // starting position\n      zoom: 2, // starting zoom\n    });\n\n    this.map.addControl(new mapbox.NavigationControl(), \"top-left\");\n  }\n\n  componentWillUnmount() {\n    notification.destroy();\n  }\n\n  /**\n   * Animation functions\n   * @param ts\n   */\n  addLayer = (ts) => {\n    const obj = this.radarObjects[ts];\n\n    if (!this.map.getLayer(obj.layer.id)) {\n      const sourceId = Object.keys(obj.source).find((obj) => obj.includes(ts));\n      this.map.addSource(sourceId, obj.source[sourceId]);\n      this.map.addLayer(obj.layer);\n    } else {\n      this.map.setLayoutProperty(obj.layer.id, \"visibility\", \"visible\");\n    }\n  };\n\n  changeRadarPosition = (position, preloadOnly) => {\n    while (position >= this.timestamps.length) {\n      position -= this.timestamps.length;\n    }\n    while (position < 0) {\n      position += this.timestamps.length;\n    }\n\n    var currentTimestamp = this.timestamps[this.animationPosition];\n    var nextTimestamp = this.timestamps[position];\n\n    this.addLayer(nextTimestamp);\n\n    if (preloadOnly) {\n      return;\n    }\n\n    this.animationPosition = position;\n\n    if (currentTimestamp) {\n      const obj = this.radarObjects[currentTimestamp];\n\n      const layer = this.map.getLayer(obj.layer.id);\n      if (layer) {\n        this.map.setLayoutProperty(layer.id, \"visibility\", \"none\");\n      }\n    }\n  };\n\n  /**\n   * Stop the animation\n   * Check if the animation timeout is set and clear it.\n   */\n  stop = () => {\n    if (this.animationTimer !== undefined) {\n      clearTimeout(this.animationTimer);\n      this.animationTimer = undefined;\n      this.setState({ playing: false });\n      return true;\n    }\n    return false;\n  };\n\n  play = () => {\n    this.showFrame(this.animationPosition + 1);\n\n    // Main animation driver. Run this function every 500 ms\n    this.animationTimer = setTimeout(this.play, 500);\n    this.setState({ playing: true });\n  };\n\n  showFrame = (nextPosition) => {\n    var preloadingDirection =\n      nextPosition - this.animationPosition > 0 ? 1 : -1;\n\n    this.changeRadarPosition(nextPosition);\n\n    // preload next next frame (typically, +1 frame)\n    // if don't do that, the animation will be blinking at the first loop\n    this.changeRadarPosition(nextPosition + preloadingDirection, true);\n  };\n\n  render() {\n    return (\n      <>\n        <div id=\"map\" />\n        <Button\n          type=\"primary\"\n          style={{\n            position: \"absolute\",\n            bottom: 5,\n            left: 5,\n            height: 35,\n            zIndex: 9999,\n            width: 45,\n          }}\n          onClick={() => (this.state.playing ? this.stop() : this.play())}\n        >\n          {this.state.playing ? <PauseOutlined /> : <CaretRightOutlined />}\n        </Button>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport * as mapbox from \"mapbox-gl/dist/mapbox-gl.js\";\n\nclass Simple extends React.Component {\n  map = undefined;\n\n  componentDidMount() {\n    document.title = \"Mapbox | Simple Example\";\n\n    mapbox.accessToken = process.env.REACT_APP_MAPBOX_API_KEY;\n\n    this.map = new mapbox.Map({\n      container: \"map\",\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [0, 0],\n      zoom: 1,\n    });\n\n    this.map.addControl(new mapbox.NavigationControl(), \"top-left\");\n  }\n\n  render() {\n    return (\n      <>\n        <div id=\"map\"></div>\n      </>\n    );\n  }\n}\n\nexport default Simple;\n","import React from \"react\";\nimport * as mapbox from \"mapbox-gl/dist/mapbox-gl.js\";\nimport * as turfHelpers from \"@turf/helpers\";\nimport turfCenter from \"@turf/center\";\n\nexport default class Center extends React.Component {\n  async componentDidMount() {\n    document.title = \"Mapbox | GeoJson Example\";\n    mapbox.accessToken = process.env.REACT_APP_MAPBOX_API_KEY;\n\n    const map = new mapbox.Map({\n      container: \"map\",\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [-90, 40],\n      zoom: 3,\n    });\n    map.addControl(new mapbox.NavigationControl(), \"top-left\");\n\n    map.on(\"load\", async function () {\n      const statesJson = await (\n        await fetch(`${window.location.origin}/${window.location.pathname.split(\"/\")[1]}/states.json`)\n      ).json();\n\n      const turfFeatureCollection = turfHelpers.featureCollection(statesJson.features);\n      const allCenters = [];\n\n      turfFeatureCollection.features.forEach((feature) => {\n        const center = turfCenter(feature);\n        center.properties = {\n          name: `${feature.properties.name}'s center` || \"\",\n        };\n        allCenters.push(center);\n      });\n      const centerFeatureCollection = turfHelpers.featureCollection(allCenters);\n\n      map.addSource(\"states\", {\n        type: \"geojson\",\n        data: statesJson,\n      });\n\n      map.addSource(\"turf\", {\n        type: \"geojson\",\n        data: centerFeatureCollection,\n      });\n\n      map.addLayer({\n        id: \"states\",\n        source: \"states\",\n        type: \"fill\",\n        paint: {\n          \"fill-color\": \"#03a9f4\",\n          \"fill-opacity\": 0.4,\n        },\n      });\n\n      map.addLayer({\n        id: \"turf\",\n        source: \"turf\",\n        type: \"symbol\",\n        layout: {\n          \"icon-image\": [\n            \"coalesce\",\n            [\"image\", [\"concat\", [\"get\", \"icon\"], \"-15\"]],\n            [\"image\", \"marker-15\"],\n          ],\n        },\n      });\n\n      map.on(\"click\", function (e) {\n        const features = map.queryRenderedFeatures(e.point);\n        if (!features || features.length <= 0) {\n          return;\n        }\n\n        let descStr = \"\";\n        for (let i = 0; i < features.length; i++) {\n          const properties = features[i].properties;\n          if (properties.name) {\n            descStr += `Feature ${i}: ${properties.name}<br/>`;\n          } else if (properties.text) {\n            descStr += `Feature ${i}: ${properties.user} tweeted \"${properties.text}\"</br>`;\n          } else {\n            const unknownString =\n              Object.keys(properties).length > 0\n                ? JSON.stringify(properties)\n                : features[i].layer.id || \"Unknown Layer\";\n\n            descStr += `Feature ${i}: ${unknownString}<br/>`;\n          }\n        }\n\n        const coordinates = e.lngLat;\n\n        new mapbox.Popup()\n          .setLngLat(coordinates)\n          .setHTML(`<p>${descStr}</p>`)\n          .addTo(map);\n      });\n\n      // Change the cursor to a pointer when the mouse is over the states layer.\n      map.on(\"mouseenter\", \"states\", function () {\n        map.getCanvas().style.cursor = \"pointer\";\n      });\n\n      // Change it back to a pointer when it leaves.\n      map.on(\"mouseleave\", \"states\", function () {\n        map.getCanvas().style.cursor = \"\";\n      });\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div id=\"map\"></div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport * as mapbox from \"mapbox-gl/dist/mapbox-gl.js\";\nimport * as turfHelpers from \"@turf/helpers\";\n\nexport default class Connect extends React.Component {\n  async componentDidMount() {\n    document.title = \"Mapbox | GeoJson Example\";\n    mapbox.accessToken = process.env.REACT_APP_MAPBOX_API_KEY;\n\n    const map = new mapbox.Map({\n      container: \"map\",\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [-90, 40],\n      zoom: 3,\n    });\n    map.addControl(new mapbox.NavigationControl(), \"top-left\");\n\n    map.on(\"load\", async function () {\n      const twitterJson = await (\n        await fetch(`${window.location.origin}/${window.location.pathname.split(\"/\")[1]}/twitter.json`)\n      ).json();\n\n      const turfFeatureCollection = turfHelpers.featureCollection(\n        twitterJson.features\n      );\n\n      const flatCoords = [];\n      turfFeatureCollection.features.forEach((feature) => {\n        flatCoords.push(feature.geometry.coordinates);\n      });\n\n      const lineString = turfHelpers.lineString(flatCoords);\n\n      map.addSource(\"twitter\", {\n        type: \"geojson\",\n        data: twitterJson,\n      });\n\n      map.addSource(\"turf\", {\n        type: \"geojson\",\n        data: lineString,\n      });\n\n      map.addLayer({\n        id: \"twitter\",\n        source: \"twitter\",\n        type: \"symbol\",\n        layout: {\n          \"icon-image\": [\n            \"coalesce\",\n            [\"image\", [\"concat\", [\"get\", \"icon\"], \"-15\"]],\n            [\"image\", \"marker-15\"],\n          ],\n        },\n      });\n\n      map.addLayer({\n        id: \"turf\",\n        source: \"turf\",\n        type: \"line\",\n      });\n\n      // Change the cursor to a pointer when the mouse is over the states layer.\n      map.on(\"mouseenter\", \"twitter\", function () {\n        map.getCanvas().style.cursor = \"pointer\";\n      });\n\n      // Change it back to a pointer when it leaves.\n      map.on(\"mouseleave\", \"twitter\", function () {\n        map.getCanvas().style.cursor = \"\";\n      });\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div id=\"map\"></div>\n      </>\n    );\n  }\n}\n","import \"antd/dist/antd.css\";\nimport React from \"react\";\nimport ComponentWrapper from \"../ComponentWrapper\";\nimport Drawing from \"./drawing\";\nimport GeoJSON from \"./geojson\";\nimport Popup from \"./popup\";\nimport Radar from \"./radar\";\nimport Simple from \"./simple\";\nimport Center from \"./turf/center\";\nimport Connect from \"./turf/connect\";\nimport \"./mapbox.css\";\n\nexport default function Mapbox() {\n  function mapResolver(key) {\n    switch (key) {\n      case \"1\":\n        return <Simple />;\n      case \"2\":\n        return <Drawing />;\n      case \"3\":\n        return <Popup />;\n      case \"4\":\n        return <GeoJSON />;\n      case \"5\":\n        return <Connect />;\n      case \"6\":\n        return <Center />;\n      case \"7\":\n        return <Radar />;\n      default:\n        return <Simple />;\n    }\n  }\n\n  return <ComponentWrapper framework=\"mapbox\" mapResolver={mapResolver} />;\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Leaflet from \"./leaflet\";\nimport OpenLayers from \"./ol\";\nimport LandingPage from \"./landing-page\";\nimport Mapbox from \"./mapbox\";\n\nexport default function App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/leaflet/:id\" component={Leaflet}></Route>\n        <Route path=\"/ol/:id\" component={OpenLayers}></Route>\n        <Route path=\"/mapbox/:id\" component={Mapbox}></Route>\n        <Route path=\"/\" component={LandingPage}></Route>\n      </Switch>\n    </Router>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}